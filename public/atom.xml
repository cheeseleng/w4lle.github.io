<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>w4lle&#39;s Notes</title>
  <subtitle>Eeeee... va?</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://w4lle.github.io/"/>
  <updated>2016-05-08T15:35:11.000Z</updated>
  <id>http://w4lle.github.io/</id>
  
  <author>
    <name>w4lle</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端基础(二)--快速布局神器Flexbox布局</title>
    <link href="http://w4lle.github.io/2016/05/08/Flexbox/"/>
    <id>http://w4lle.github.io/2016/05/08/Flexbox/</id>
    <published>2016-05-08T12:38:35.000Z</published>
    <updated>2016-05-08T15:35:11.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u4EC0_u4E48_u662FFlexbox&quot;&gt;&lt;a href=&quot;#u4EC0_u4E48_u662FFlexbox&quot; class=&quot;headerlink&quot; title=&quot;什么是Flexbox&quot;&gt;&lt;/a&gt;什么是Flexbox&lt;/h1&gt;&lt;p&gt;在&lt;a href=&quot;http://w4lle.github.io/2016/04/17/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80-%E4%B8%80-CSS%E5%B8%83%E5%B1%80%E5%9F%BA%E7%A1%80/&quot;&gt;上一篇文章&lt;/a&gt;中，我们知道CSS布局传统的布局方式是基于盒模型，主要依赖 display属性 + position属性 + float属性。这种盒模型对于一些复杂的布局解决起来比较麻烦，所以一种新的布局方式应运而生。&lt;br&gt;2009年，W3C提出了一种新的方案–Flexbox布局(弹性布局)，可以简便、完整、响应式地实现各种页面布局。Flex布局模型不同于块和内联模型布局，块和内联模型的布局计算依赖于块和内联的流方向。&lt;br&gt;并且React Native也是使用的Flex布局，对于客户端开发来说学习Flex大有裨益。&lt;/p&gt;
&lt;h1 id=&quot;u57FA_u672C_u6982_u5FF5_u548C_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#u57FA_u672C_u6982_u5FF5_u548C_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;基本概念和属性&quot;&gt;&lt;/a&gt;基本概念和属性&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Flexbox&lt;/code&gt;布局依赖于&lt;code&gt;flex directions&lt;/code&gt;，简单的说：&lt;code&gt;Flexbox&lt;/code&gt;是布局模块，而不是一个简单的属性。采用Flex布局的元素，称为&lt;code&gt;Flex容器&lt;/code&gt;（flex container），它的所有&lt;code&gt;子元素&lt;/code&gt;（flex item）自动成为容器成员。&lt;br&gt;&lt;code&gt;Flexbox&lt;/code&gt;布局很像&lt;code&gt;Android&lt;/code&gt;开发中的&lt;code&gt;LinearLayout&lt;/code&gt;布局，但是要比&lt;code&gt;LinearLayout&lt;/code&gt;要强大。跟&lt;code&gt;LinearLayout&lt;/code&gt;类似，&lt;code&gt;Flexbox&lt;/code&gt;也存在两个方向的布局–主轴（main axis）和副轴（cross axis），可以简单的理解为&lt;code&gt;LinearLayout&lt;/code&gt;的水平布局和垂直布局。主轴的开始位置（与边框的交叉点）叫做&lt;code&gt;main start&lt;/code&gt;，结束位置叫做&lt;code&gt;main end&lt;/code&gt;；交叉轴的开始位置叫做&lt;code&gt;cross start&lt;/code&gt;，结束位置叫做&lt;code&gt;cross end&lt;/code&gt;。项目默认沿主轴排列。单个项目占据的主轴空间叫做&lt;code&gt;main size&lt;/code&gt;，占据的交叉轴空间叫做&lt;code&gt;cross size&lt;/code&gt;。&lt;br&gt;&lt;img src=&quot;http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071004.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;u5C5E_u6027&quot;&gt;&lt;a href=&quot;#u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;属性&quot;&gt;&lt;/a&gt;属性&lt;/h1&gt;&lt;p&gt;属性分为&lt;code&gt;flex container&lt;/code&gt;属性和&lt;code&gt;flex item&lt;/code&gt;属性。对应父容器和子元素。&lt;/p&gt;
&lt;h2 id=&quot;flex_container_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#flex_container_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;flex container属性&quot;&gt;&lt;/a&gt;flex container属性&lt;/h2&gt;&lt;p&gt;以下几个属于&lt;code&gt;flex container&lt;/code&gt;属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex container 属性&lt;/li&gt;
&lt;li&gt;order&lt;/li&gt;
&lt;li&gt;flex-wrap&lt;/li&gt;
&lt;li&gt;flex-flow&lt;/li&gt;
&lt;li&gt;justify-content&lt;/li&gt;
&lt;li&gt;align-content&lt;/li&gt;
&lt;li&gt;align-items&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;flex-direction_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#flex-direction_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;flex-direction属性&quot;&gt;&lt;/a&gt;flex-direction属性&lt;/h3&gt;&lt;p&gt;flex-direction属性决定主轴的方向（即项目的排列方向）。类似&lt;code&gt;LinearLayout&lt;/code&gt;的&lt;code&gt;vertical&lt;/code&gt;or&lt;code&gt;Horizontal&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;flex-direction: row | row-reverse | column | column-reverse&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有四个值可以选择：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;row（默认值）：主轴为水平方向，起点在左端。&lt;/li&gt;
&lt;li&gt;row-reverse：主轴为水平方向，起点在右端。&lt;/li&gt;
&lt;li&gt;column：主轴为垂直方向，起点在上沿。&lt;/li&gt;
&lt;li&gt;column-reverse：主轴为垂直方向，起点在下沿。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;order_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#order_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;order属性&quot;&gt;&lt;/a&gt;order属性&lt;/h3&gt;&lt;p&gt;默认情况下子元素的排列方式按照文档流的顺序依次排序，而&lt;code&gt;order&lt;/code&gt;属性可以控制排列的顺序，负值在前，正值灾后，按照从小到大的顺序依次排列。我们说之所以&lt;code&gt;flex box&lt;/code&gt;相对&lt;code&gt;LinearLayout&lt;/code&gt;强就是因为一些属性比较给力，&lt;code&gt;order&lt;/code&gt;就是其中之一。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://sfault-image.b0.upaiyun.com/318/287/3182877863-56fde345ba339_articlex&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;flex-wrap_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#flex-wrap_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;flex-wrap属性&quot;&gt;&lt;/a&gt;flex-wrap属性&lt;/h3&gt;&lt;p&gt;默认情况下&lt;code&gt;Flex&lt;/code&gt;跟&lt;code&gt;LinearLayout&lt;/code&gt;一样，都是不带换行排列的，但是&lt;code&gt;flex-wrap&lt;/code&gt;属性可以支持换行排列。这个也比&lt;code&gt;LinearLayout&lt;/code&gt;吊啊有三个值：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;flex-wrap: nowrap | wrap | wrap-reverse;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://sfault-image.b0.upaiyun.com/159/596/15959628-56fde3489ff74_articlex&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nowrap ：不换行&lt;/li&gt;
&lt;li&gt;wrap：按正常方向换行&lt;/li&gt;
&lt;li&gt;wrap-reverse：按反方向换行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;flex-flow_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#flex-flow_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;flex-flow属性&quot;&gt;&lt;/a&gt;flex-flow属性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;flex-flow&lt;/code&gt;属性是&lt;code&gt;flex-direction&lt;/code&gt;属性和&lt;code&gt;flex-wrap&lt;/code&gt;属性的简写形式，默认值为&lt;code&gt;row nowrap&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;flex-flow: &amp;#60;flex-direction&amp;#62; || &amp;#60;flex-wrap&amp;#62;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;justify-content_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#justify-content_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;justify-content属性&quot;&gt;&lt;/a&gt;justify-content属性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;justify-content&lt;/code&gt;属性定义了项目在主轴上的对齐方式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;justify-content: flex-start | flex-end | center | space-between | space-around;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;flex-start（默认值）：左对齐&lt;/li&gt;
&lt;li&gt;flex-end：右对齐&lt;/li&gt;
&lt;li&gt;center： 居中&lt;/li&gt;
&lt;li&gt;space-between：两端对齐，项目之间的间隔都相等。&lt;/li&gt;
&lt;li&gt;space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://sfault-image.b0.upaiyun.com/421/275/4212753174-56fde6083157c_articlex&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;align-items_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#align-items_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;align-items属性&quot;&gt;&lt;/a&gt;align-items属性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;align-items&lt;/code&gt;属性定义项目在副轴轴上如何对齐。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;align-items: flex-start | flex-end | center | baseline | stretch;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;flex-start：交叉轴的起点对齐。&lt;/li&gt;
&lt;li&gt;flex-end：交叉轴的终点对齐。&lt;/li&gt;
&lt;li&gt;center：交叉轴的中点对齐。&lt;/li&gt;
&lt;li&gt;baseline: 项目的第一行文字的基线对齐。&lt;/li&gt;
&lt;li&gt;stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20150616152600533&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;align-content_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#align-content_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;align-content属性&quot;&gt;&lt;/a&gt;align-content属性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;align-content&lt;/code&gt;属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;align-content: flex-start | flex-end | center | space-between | space-around | stretch;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;flex-start：与交叉轴的起点对齐。&lt;/li&gt;
&lt;li&gt;flex-end：与交叉轴的终点对齐。&lt;/li&gt;
&lt;li&gt;center：与交叉轴的中点对齐。&lt;/li&gt;
&lt;li&gt;space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。&lt;/li&gt;
&lt;li&gt;space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。&lt;/li&gt;
&lt;li&gt;stretch（默认值）：轴线占满整个交叉轴。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u5B50_u5143_u7D20_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#u5B50_u5143_u7D20_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;子元素属性&quot;&gt;&lt;/a&gt;子元素属性&lt;/h2&gt;&lt;p&gt;以下几个属性设置在子元素上。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-grow&lt;/li&gt;
&lt;li&gt;flex-shrink&lt;/li&gt;
&lt;li&gt;flex-basis&lt;/li&gt;
&lt;li&gt;flex&lt;/li&gt;
&lt;li&gt;align-self&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;flex-grow_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#flex-grow_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;flex-grow属性&quot;&gt;&lt;/a&gt;flex-grow属性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;flex-grow&lt;/code&gt;属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。一张图看懂。跟&lt;code&gt;LinearLayout&lt;/code&gt;中的&lt;code&gt;weight&lt;/code&gt;属性一样。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.item &amp;#123;&amp;#10;  flex-grow: &amp;#60;number&amp;#62;; /* default 0 */&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://sfault-image.b0.upaiyun.com/271/846/2718468848-56fde60740335_articlex&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果所有项目的&lt;code&gt;flex-grow&lt;/code&gt;属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的&lt;code&gt;flex-grow&lt;/code&gt;属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。&lt;/p&gt;
&lt;h3 id=&quot;flex-shrink_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#flex-shrink_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;flex-shrink属性&quot;&gt;&lt;/a&gt;flex-shrink属性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;flex-shrink&lt;/code&gt;属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.item &amp;#123;&amp;#10;  flex-shrink: &amp;#60;number&amp;#62;; /* default 1 */&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果所有项目的&lt;code&gt;flex-shrink&lt;/code&gt;属性都为1，当空间不足时，都将等比例缩小。如果一个项目的&lt;code&gt;flex-shrink&lt;/code&gt;属性为0，其他项目都为1，则空间不足时，前者不缩小。&lt;br&gt;负值对该属性无效。&lt;/p&gt;
&lt;h3 id=&quot;flex-basis_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#flex-basis_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;flex-basis属性&quot;&gt;&lt;/a&gt;flex-basis属性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;flex-basis&lt;/code&gt;属性定义了在分配多余空间之前，子元素占据的&lt;code&gt;main size&lt;/code&gt;主轴空间，浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为&lt;code&gt;auto&lt;/code&gt;，即子元素的本来大小。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.item &amp;#123;&amp;#10;  flex-basis: &amp;#60;length&amp;#62; | auto; /* default auto */&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;flex_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#flex_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;flex属性&quot;&gt;&lt;/a&gt;flex属性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;flex&lt;/code&gt;属性是&lt;code&gt;flex-grow&lt;/code&gt;, &lt;code&gt;flex-shrink&lt;/code&gt; 和 &lt;code&gt;flex-basis&lt;/code&gt;的简写，默认值为0 1 auto。后两个属性可选。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.item &amp;#123;&amp;#10;  flex: none | [ &amp;#60;&amp;#39;flex-grow&amp;#39;&amp;#62; &amp;#60;&amp;#39;flex-shrink&amp;#39;&amp;#62;? || &amp;#60;&amp;#39;flex-basis&amp;#39;&amp;#62; ]&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。&lt;/p&gt;
&lt;h3 id=&quot;align-self_u5C5E_u6027&quot;&gt;&lt;a href=&quot;#align-self_u5C5E_u6027&quot; class=&quot;headerlink&quot; title=&quot;align-self属性&quot;&gt;&lt;/a&gt;align-self属性&lt;/h3&gt;&lt;p&gt;&lt;code&gt;align-self&lt;/code&gt;属性允许单个子元素有与其他子元素不一样的对齐方式，可覆盖&lt;code&gt;align-items&lt;/code&gt;属性。默认值为&lt;code&gt;auto&lt;/code&gt;，表示继承父元素的&lt;code&gt;align-items&lt;/code&gt;属性，如果没有父元素，则等同于&lt;code&gt;stretch&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.item &amp;#123;&amp;#10;  align-self: auto | flex-start | flex-end | center | baseline | stretch;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该属性可能取6个值，除了&lt;code&gt;auto&lt;/code&gt;，其他都与&lt;code&gt;align-items&lt;/code&gt;属性完全一致。&lt;/p&gt;
&lt;h1 id=&quot;u5B9E_u4F8B&quot;&gt;&lt;a href=&quot;#u5B9E_u4F8B&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h1&gt;&lt;p&gt;属性基本都讲完了，下面进入实战。&lt;br&gt;百度前端学院的其中一个任务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习如何flex进行布局，学习如何根据屏幕宽度调整布局策略。&lt;/li&gt;
&lt;li&gt;屏幕宽度小于 640px 时，调整 Flexbox 的属性以实现第四个元素移动到最前面的效果，而不要改动第一个元素的边框颜色与高度实现效果图。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://7xrp04.com1.z0.glb.clouddn.com/task_1_10_1.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;效果图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;屏幕宽度小于640px时，调整主轴对齐方式justify-content属性为space-between，在副轴对齐方式align-items为center&lt;/li&gt;
&lt;li&gt;屏幕宽度大于640px，要有换行，并且动态调整&lt;code&gt;order&lt;/code&gt;属性，调整第四个子元素的排列位置。并且调整align-items为flex-start;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://w4lle.github.io/ife_baidu/task10/index.html&quot;&gt;效果图&lt;/a&gt;和&lt;a href=&quot;https://github.com/w4lle/ife_baidu/tree/master/task10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;代码&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;可以看到，&lt;code&gt;Flex box&lt;/code&gt;布局方式相比传统的盒模型布局方式要快速很多，对于一些复杂的页面也可以很快速的开发。而且由于&lt;code&gt;React Native&lt;/code&gt;的支持并使用，相信会有跟多开发者使用这种布局方式进行开发。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u4EC0_u4E48_u662FFlexbox&quot;&gt;&lt;a href=&quot;#u4EC0_u4E48_u662FFlexbox&quot; class=&quot;headerlink&quot; title=&quot;什么是Flexbox&quot;&gt;&lt;/a&gt;什么是Flexbox&lt;/h1&gt;&lt;p&gt;在&lt;a href=&quot;
    
    </summary>
    
    
      <category term="Flexbox" scheme="http://w4lle.github.io/tags/Flexbox/"/>
    
      <category term="前端" scheme="http://w4lle.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>从Instant run谈Android替换Application和动态加载机制</title>
    <link href="http://w4lle.github.io/2016/05/02/%E4%BB%8EInstant%20run%E8%B0%88Android%E6%9B%BF%E6%8D%A2Application%E5%92%8C%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/"/>
    <id>http://w4lle.github.io/2016/05/02/从Instant run谈Android替换Application和动态加载机制/</id>
    <published>2016-05-02T11:33:05.000Z</published>
    <updated>2016-05-04T06:44:49.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Android studio 2.0 Stable&lt;/code&gt;版本中集成了&lt;code&gt;Install run&lt;/code&gt;即时编译技术，官方描述可以大幅加速编译速度，我们团队在第一时间更新并使用，总体用下来感觉，恩…也就那样吧，还不如不用的快。所以就去看了下&lt;code&gt;Install run&lt;/code&gt;的实现方式，其中有一个整体框架的基础，也就是今天的文章的主题，Android替换Application和动态加载机制。&lt;/p&gt;
&lt;h1 id=&quot;Instant_run&quot;&gt;&lt;a href=&quot;#Instant_run&quot; class=&quot;headerlink&quot; title=&quot;Instant run&quot;&gt;&lt;/a&gt;Instant run&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Instant run&lt;/code&gt;的大概实现原理可以看下这篇&lt;a href=&quot;http://jiajixin.cn/2015/11/25/instant-run/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Instant Run 浅析&lt;/a&gt;，我们需要知道&lt;code&gt;Instant run&lt;/code&gt;使用的&lt;code&gt;gradle plugin2.0.0&lt;/code&gt;，源码在&lt;a href=&quot;https://bintray.com/android/android-tools/com.android.tools.build.gradle/view&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;，文中大概讲了下&lt;code&gt;Instant run&lt;/code&gt;的实现原理，但是并没有深入细节，特别是替换Application和动态加载机制。&lt;/p&gt;
&lt;p&gt;关于动态加载，实际上&lt;code&gt;Instant run&lt;/code&gt;提供了两种动态加载的机制：&lt;br&gt;1.修改java代码需要重启应用加载补丁dex，而在Application初始化时替换了Application，新建了一个自定义的ClassLoader去加载所有的dex文件。我们称为&lt;strong&gt;重启更新机制&lt;/strong&gt;&lt;br&gt;2.修改代码不需要重启，新建一个&lt;code&gt;ClassLoader&lt;/code&gt;去加载修改部分。我们称为&lt;strong&gt;热更新机制&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;Application_u5165_u53E3&quot;&gt;&lt;a href=&quot;#Application_u5165_u53E3&quot; class=&quot;headerlink&quot; title=&quot;Application入口&quot;&gt;&lt;/a&gt;Application入口&lt;/h2&gt;&lt;p&gt;在编译时&lt;code&gt;Instant run&lt;/code&gt;用到了&lt;code&gt;Transform API&lt;/code&gt;修改字节码文件。其中&lt;code&gt;AndroidManifest.xml&lt;/code&gt;文件也被修改，如下：&lt;br&gt;&lt;code&gt;/app/build/intermediates/bundles/production/instant-run/AndroidManifest.xml&lt;/code&gt;，其中的&lt;code&gt;Application&lt;/code&gt;标签&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;application&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;com.aa.bb.MyApplication&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;com.android.tools.fd.runtime.BootstrapApplication&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;多了一个&lt;code&gt;com.android.tools.fd.runtime.BootstrapApplication&lt;/code&gt;，在刚刚提到的&lt;code&gt;gradle plugin&lt;/code&gt;中的&lt;code&gt;instant-run-server&lt;/code&gt;目录下找到该文件。&lt;/p&gt;
&lt;p&gt;实际上&lt;code&gt;BootstrapApplication&lt;/code&gt;是我们app的实际入口，我们自己的&lt;code&gt;Application&lt;/code&gt;即&lt;code&gt;MyApplication&lt;/code&gt;采用反射机制调用。&lt;br&gt;我们知道&lt;code&gt;Application&lt;/code&gt;是&lt;code&gt;ContextWrapper&lt;/code&gt;的子类&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// android.app.Application&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ContextWrapper&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// android.content.ContextWrapper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ContextWrapper&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Context&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Context mBase;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ContextWrapper&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context base)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBase = base;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;attachBaseContext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context base)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mBase != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&quot;Base context already set&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBase = base;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; AssetManager &lt;span class=&quot;title&quot;&gt;getAssets&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mBase.getAssets();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Resources &lt;span class=&quot;title&quot;&gt;getResources&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mBase.getResources();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ContextWrapper一方面继承了Context，一方面又包含(composite)了一个Context对象（称为mBase），对Context的实现为转发给mBase对象处理。上面的代码表示，在&lt;code&gt;attachBaseContext&lt;/code&gt;方式调用之前Application是没有用的，因为mBase是空的。所以我们看下&lt;code&gt;BootstrapApplication&lt;/code&gt;的&lt;code&gt;attachBaseContext&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;attachBaseContext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!AppInfo.usingApkSplits) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            createResources(apkModified);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//新建一个ClassLoader并设置为原ClassLoader的parent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setupClassLoaders(context, context.getCacheDir().getPath(), apkModified);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//通过Manifest中我们的实际Application即MyApplication名反射生成对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        createRealApplication();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//调用attachBaseContext完成初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.attachBaseContext(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (realApplication != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//反射调用实际Application的attachBaseContext方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Method attachBaseContext =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ContextWrapper.class.getDeclaredMethod(&lt;span class=&quot;string&quot;&gt;&quot;attachBaseContext&quot;&lt;/span&gt;, Context.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                attachBaseContext.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                attachBaseContext.invoke(realApplication, context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;初始化ClassLoader&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//BootstrapApplication.setupClassLoaders&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setupClassLoaders&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, String codeCacheDir, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; apkModified)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// /data/data/package_name/files/instant-run/dex/目录下的dex列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        List&amp;lt;String&amp;gt; dexList = FileManager.getDexList(context, apkModified);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ClassLoader classLoader = BootstrapApplication.class.getClassLoader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String nativeLibraryPath = (String) classLoader.getClass().getMethod(&lt;span class=&quot;string&quot;&gt;&quot;getLdLibraryPath&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                .invoke(classLoader);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            IncrementalClassLoader.inject(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    classLoader,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    nativeLibraryPath,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    codeCacheDir,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    dexList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//IncrementalClassLoader.inject&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ClassLoader &lt;span class=&quot;title&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ClassLoader classLoader, String nativeLibraryPath, String codeCacheDir,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            List&amp;lt;String&amp;gt; dexes)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//新建一个自定义ClassLoader，dexPath为参数中的dexList&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IncrementalClassLoader incrementalClassLoader =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IncrementalClassLoader(classLoader, nativeLibraryPath, codeCacheDir, dexes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//设置为原ClassLoader的parent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setParent(classLoader, incrementalClassLoader);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; incrementalClassLoader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u52A8_u6001_u52A0_u8F7D&quot;&gt;&lt;a href=&quot;#u52A8_u6001_u52A0_u8F7D&quot; class=&quot;headerlink&quot; title=&quot;动态加载&quot;&gt;&lt;/a&gt;动态加载&lt;/h2&gt;&lt;p&gt;新建一个自定义的&lt;code&gt;ClassLoader&lt;/code&gt;名为IncrementalClassLoader，该&lt;code&gt;ClassLoader&lt;/code&gt;很简单，就是&lt;code&gt;BaseDexClassLoader&lt;/code&gt;的一个子类，并且将&lt;code&gt;IncrementalClassLoader&lt;/code&gt;设置为原ClassLoader的parent，熟悉JVM加载机制的同学应该都知道，由于ClassLoader采用双亲委托模式，即委托父类加载类，父类找不到再自己去找。这样&lt;code&gt;IncrementalClassLoader&lt;/code&gt;就变成了整个App的所有类的加载的ClassLoader，并且dexPath是&lt;code&gt;/data/data/package_name/files/instant-run/dex&lt;/code&gt;目录下的dex列表，这意味着什么呢？&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//``BaseDexClassLoader``的``findClass``&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Class&amp;lt;?&amp;gt; findClass(String name) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    List&amp;lt;Throwable&amp;gt; suppressedExceptions = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Throwable&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class c = pathList.findClass(name, suppressedExceptions);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ClassNotFoundException cnfe = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClassNotFoundException(&lt;span class=&quot;string&quot;&gt;&quot;Didn&#39;t find class \&quot;&quot;&lt;/span&gt; + name + &lt;span class=&quot;string&quot;&gt;&quot;\&quot; on path: &quot;&lt;/span&gt; + pathList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Throwable t : suppressedExceptions) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cnfe.addSuppressed(t);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; cnfe;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，查找Class的任务通过pathList完成；这个pathList是一个DexPathList类的对象，它的findClass方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Class &lt;span class=&quot;title&quot;&gt;findClass&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name, List&amp;lt;Throwable&amp;gt; suppressed)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Element element : dexElements) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       DexFile dex = element.dexFile;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dex != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Class clazz = dex.loadClassBinaryName(name, definingContext, suppressed);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (clazz != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dexElementsSuppressedExceptions != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       suppressed.addAll(Arrays.asList(dexElementsSuppressedExceptions));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个DexPathList内部有一个叫做dexElements的数组，然后findClass的时候会遍历这个数组来查找Class。看到了吗，这个dexElements就是从dexPath来的，也就说是&lt;code&gt;IncrementalClassLoader&lt;/code&gt;用来加载dexPath(/data/data/package_name/files/instant-run/dex/)下面的dex文件。感兴趣的同学可以看下，我们app中的所有第三方库和自己项目中的代码，都被打包成若干个slice dex分片，该目录下有几十个dex文件。每当修改代码用&lt;code&gt;Instant run&lt;/code&gt;完成编译，该目录下的dex文件就会有一个或者几个的更新时间发生改变。&lt;/p&gt;
&lt;p&gt;正常情况下，apk被安装之后，APK文件的代码以及资源会被系统存放在固定的目录（比如/data/app/package_name/base-1.apk )系统在进行类加载的时候，会自动去这一个或者几个特定的路径来寻找这个类。而使用&lt;code&gt;Install run&lt;/code&gt;则完全不管之前的加载路径，所有的分片dex文件和资源都在dexPath下，用&lt;code&gt;IncrementalClassLoader&lt;/code&gt;去加载。也就是加载不存在APK固定路径之外的类，即动态加载。&lt;/p&gt;
&lt;p&gt;但是仅仅有ClassLoader是不够的。因为每个被修改的类都被改了名字，类名在原名后面添加&lt;code&gt;$override&lt;/code&gt;，目录在&lt;code&gt;app/build/intermediates/transforms/instantRun/debug/folders/4000&lt;/code&gt;。AndroidManifest中并没有注册这些被改了名字的Activity。&amp;gt; 因此正常情况下系统无法加载我们插件中的类；因此也没有办法创建Activity的对象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;解决这个问题有两个思路，要么全盘接管这个类加载的过程；要么告知系统我们使用的插件存在于哪里，让系统帮忙加载；这两种方式或多或少都需要干预这个类加载的过程。&lt;br&gt;引用自 – &lt;a href=&quot;http://weishu.me/2016/04/05/understand-plugin-framework-classloader/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 插件化原理解析——插件加载机制&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u52A8_u6001_u52A0_u8F7D_u7684_u4E24_u79CD_u65B9_u6848&quot;&gt;&lt;a href=&quot;#u52A8_u6001_u52A0_u8F7D_u7684_u4E24_u79CD_u65B9_u6848&quot; class=&quot;headerlink&quot; title=&quot;动态加载的两种方案&quot;&gt;&lt;/a&gt;动态加载的两种方案&lt;/h2&gt;&lt;p&gt;先来看下系统如何完成类的加载过程。&lt;br&gt;&lt;code&gt;Activity&lt;/code&gt;的创建过程&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java.lang.ClassLoader cl = r.packageInfo.getClassLoader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;activity = mInstrumentation.newActivity(cl, component.getClassName(), r.intent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StrictMode.incrementExpectedActivityCount(activity.getClass());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r.intent.setExtrasClassLoader(cl);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过&lt;code&gt;ClassLoader&lt;/code&gt;和类名加载，反射调用生成&lt;code&gt;Activity&lt;/code&gt;对象，其中的&lt;code&gt;ClassLoader&lt;/code&gt;从&lt;code&gt;LoadedApk&lt;/code&gt;的一个对象&lt;code&gt;r.packageInfo&lt;/code&gt;中获得的。&lt;code&gt;LoadedApk&lt;/code&gt;对象是APK文件在内存中的表示。 Apk文件的相关信息，诸如Apk文件的代码和资源，甚至代码里面的&lt;code&gt;Activity&lt;/code&gt;，&lt;code&gt;Service&lt;/code&gt;等组件的信息我们都可以通过此对象获取。&lt;br&gt;r.packageInfo的来源：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; LoadedApk &lt;span class=&quot;title&quot;&gt;getPackageInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ApplicationInfo aInfo, CompatibilityInfo compatInfo,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ClassLoader baseLoader, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; securityViolation, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; includeCode,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; registerPackage)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 获取userid信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; differentUser = (UserHandle.myUserId() != UserHandle.getUserId(aInfo.uid));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (mResourcesManager) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 尝试获取缓存信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        WeakReference&amp;lt;LoadedApk&amp;gt; ref;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (differentUser) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Caching not supported across users&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ref = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (includeCode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ref = mPackages.get(aInfo.packageName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ref = mResourcePackages.get(aInfo.packageName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LoadedApk packageInfo = ref != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? ref.get() : &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (packageInfo == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || (packageInfo.mResources != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !packageInfo.mResources.getAssets().isUpToDate())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// 缓存没有命中，直接new&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            packageInfo =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LoadedApk(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, aInfo, compatInfo, baseLoader,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        securityViolation, includeCode &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        (aInfo.flags&amp;amp;ApplicationInfo.FLAG_HAS_CODE) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, registerPackage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 省略。。更新缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; packageInfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重要的是这个缓存&lt;code&gt;mPackage&lt;/code&gt;，&lt;code&gt;LoadedApk&lt;/code&gt;对象&lt;code&gt;packageInfo&lt;/code&gt;就是从这个缓存中取的，所以我们只要在&lt;code&gt;mPackage&lt;/code&gt;修改里面的&lt;code&gt;ClassLoader&lt;/code&gt;控制类的加载就能完成动态加载。&lt;/p&gt;
&lt;p&gt;在《&lt;a href=&quot;http://weishu.me/2016/04/05/understand-plugin-framework-classloader/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 插件化原理解析——插件加载机制&lt;/a&gt;》一文中，作者已经提出两种动态加载的解决方案：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;『激进方案』中我们自定义了插件的ClassLoader，并且绕开了Framework的检测；利用ActivityThread对于LoadedApk的缓存机制，我们把携带这个自定义的ClassLoader的插件信息添加进mPackages中，进而完成了类的加载过程。&lt;/p&gt;
&lt;p&gt;『保守方案』中我们深入探究了系统使用ClassLoader findClass的过程，发现应用程序使用的非系统类都是通过同一个PathClassLoader加载的；而这个类的最终父类BaseDexClassLoader通过DexPathList完成类的查找过程；我们hack了这个查找过程，从而完成了插件类的加载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;激进方案由于是一个插件一个&lt;code&gt;Classloader&lt;/code&gt;也叫多&lt;code&gt;ClassLoader&lt;/code&gt;方案，代表作&lt;a href=&quot;https://github.com/Qihoo360/DroidPlugin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DroidPlugin&lt;/a&gt;；保守方案也叫做单&lt;code&gt;ClassLoader&lt;/code&gt;方案，代表作，Small、众多热更新框架如&lt;a href=&quot;https://github.com/jasonross/Nuwa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nuwa&lt;/a&gt;等。&lt;/p&gt;
&lt;h2 id=&quot;Instant_run_u7684_u91CD_u542F_u66F4_u65B0_u673A_u5236&quot;&gt;&lt;a href=&quot;#Instant_run_u7684_u91CD_u542F_u66F4_u65B0_u673A_u5236&quot; class=&quot;headerlink&quot; title=&quot;Instant run的重启更新机制&quot;&gt;&lt;/a&gt;Instant run的重启更新机制&lt;/h2&gt;&lt;p&gt;绕了一大圈，终于能接着往下看了。接上面，我们继续看&lt;code&gt;BootstrapApplication&lt;/code&gt;的&lt;code&gt;onCreate&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MonkeyPatcher.monkeyPatchApplication(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    BootstrapApplication.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, BootstrapApplication.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    realApplication, externalResourcePath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            MonkeyPatcher.monkeyPatchExistingResources(BootstrapApplication.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    externalResourcePath, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//手机客户端app和Android Studio建立Socket通信，AS是客户端发消息，app		//是服务端接收消息作出相应操作。Instant run的通信方式。不在本文范围内&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Server.create(AppInfo.applicationId, BootstrapApplication.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (realApplication != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;//还记得这个realApplication吗，我们app中实际的Application&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            realApplication.onCreate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码，手机客户端app和Android Studio建立Socket通信，AS是客户端发消息，app是服务端接收消息作出相应操作，这是Instant run的通信方式，不在本文范围内。然后反射调用实际&lt;code&gt;Application&lt;/code&gt;的&lt;code&gt;onCreate&lt;/code&gt;方法。&lt;br&gt;那么前面的两个&lt;code&gt;MonkeyPatcher&lt;/code&gt;的方法是干嘛的呢&lt;/p&gt;
&lt;p&gt;先看&lt;code&gt;MonkeyPatcher.monkeyPatchApplication&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;monkeyPatchApplication&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Nullable Context context,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              @Nullable Application bootstrap,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              @Nullable Application realApplication,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              @Nullable String externalResourceFile)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Find the ActivityThread instance for the current thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Class&amp;lt;?&amp;gt; activityThread = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;android.app.ActivityThread&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Object currentActivityThread = getActivityThread(context, activityThread);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Find the mInitialApplication field of the ActivityThread to the real application&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Field mInitialApplication = activityThread.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;mInitialApplication&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInitialApplication.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Application initialApplication = (Application) mInitialApplication.get(currentActivityThread);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (realApplication != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; initialApplication == bootstrap) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//**2.替换掉ActivityThread.mInitialApplication**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mInitialApplication.set(currentActivityThread, realApplication);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Replace all instance of the stub application in ActivityThread#mAllApplications with the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// real one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (realApplication != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Field mAllApplications = activityThread.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;mAllApplications&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mAllApplications.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                List&amp;lt;Application&amp;gt; allApplications = (List&amp;lt;Application&amp;gt;) mAllApplications&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .get(currentActivityThread);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; allApplications.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (allApplications.get(i) == bootstrap) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//**1.替换掉ActivityThread.mAllApplications**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        allApplications.set(i, realApplication);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Figure out how loaded APKs are stored.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// API version 8 has PackageInfo, 10 has LoadedApk. 9, I don&#39;t know.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Class&amp;lt;?&amp;gt; loadedApkClass;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                loadedApkClass = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;android.app.LoadedApk&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (ClassNotFoundException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                loadedApkClass = Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;android.app.ActivityThread$PackageInfo&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Field mApplication = loadedApkClass.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;mApplication&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mApplication.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Field mResDir = loadedApkClass.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;mResDir&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mResDir.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 10 doesn&#39;t have this field, 14 does. Fortunately, there are not many Honeycomb devices&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// floating around.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Field mLoadedApk = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mLoadedApk = Application.class.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;mLoadedApk&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (NoSuchFieldException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// According to testing, it&#39;s okay to ignore this.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Enumerate all LoadedApk (or PackageInfo) fields in ActivityThread#mPackages and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// ActivityThread#mResourcePackages and do two things:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//   - Replace the Application instance in its mApplication field with the real one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//   - Replace mResDir to point to the external resource file instead of the .apk. This is&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//     used as the asset path for new Resources objects.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//   - Set Application#mLoadedApk to the found LoadedApk instance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String fieldName : &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String[]&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;mPackages&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;mResourcePackages&quot;&lt;/span&gt;&amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Field field = activityThread.getDeclaredField(fieldName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                field.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Object value = field.get(currentActivityThread);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Map.Entry&amp;lt;String, WeakReference&amp;lt;?&amp;gt;&amp;gt; entry :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ((Map&amp;lt;String, WeakReference&amp;lt;?&amp;gt;&amp;gt;) value).entrySet()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    Object loadedApk = entry.getValue().get();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (loadedApk == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mApplication.get(loadedApk) == bootstrap) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (realApplication != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;//**3.替换掉mApplication**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mApplication.set(loadedApk, realApplication);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (externalResourceFile != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;//替换掉资源目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mResDir.set(loadedApk, externalResourceFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (realApplication != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; mLoadedApk != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;//**4.替换掉mLoadedApk**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mLoadedApk.set(realApplication, loadedApk);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Throwable e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里做了三件事情：&lt;/p&gt;
&lt;p&gt;1.替换Application对象&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BootstrapApplication&lt;/code&gt;的作用就是加载&lt;code&gt;realApplication&lt;/code&gt;也就是&lt;code&gt;MyApplication&lt;/code&gt;，所以我们就要把所有Framework层的&lt;code&gt;BootstrapApplication&lt;/code&gt;对象替换为&lt;code&gt;MyApplication&lt;/code&gt;对象。包括：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;baseContext.mPackageInfo.mApplication 代码&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;处&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baseContext.mPackageInfo.mActivityThread.mInitialApplication 代码&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;处&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baseContext.mPackageInfo.mActivityThread.mAllApplications 代码&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;处&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.替换资源相关对象mResDir，前面我们已经说过，正常情况下寻找资源都是在&lt;code&gt;/data/app/package_name/base-1.apk&lt;/code&gt;目录下，而&lt;code&gt;Instant run&lt;/code&gt;将资源也抽出来放在&lt;code&gt;/data/data/package_name/files/instant-run/&lt;/code&gt;，加载目录也更改为后者&lt;/p&gt;
&lt;p&gt;3.替换&lt;code&gt;mLoadedApk&lt;/code&gt;对象&lt;br&gt;还记得前面的讲的&lt;code&gt;LoadedApk&lt;/code&gt;吗，这里面有加载类的&lt;code&gt;ClassLoader&lt;/code&gt;，由于&lt;code&gt;BootstrapApplication&lt;/code&gt;在&lt;code&gt;attachBaseContext&lt;/code&gt;方法中就将其已经替换为了&lt;code&gt;IncrementalClassLoader&lt;/code&gt;，所以代码4处反射将&lt;code&gt;BootstrapApplication&lt;/code&gt;的&lt;code&gt;mLoadedApk&lt;/code&gt;赋值给了&lt;code&gt;MyApplication&lt;/code&gt;，那么接下来MyApplication的所有类的加载都将由&lt;code&gt;IncrementalClassLoader&lt;/code&gt;来负责。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MonkeyPatcher.monkeyPatchExistingResources&lt;/code&gt;更新资源补丁，不在本文范围内就不讲了。&lt;/p&gt;
&lt;p&gt;这些工作做完之后调用&lt;code&gt;MyApplication&lt;/code&gt;的&lt;code&gt;onCreate&lt;/code&gt;方法&lt;code&gt;BootstrapApplication&lt;/code&gt;就将控制权交给了&lt;code&gt;MyApplication&lt;/code&gt;，这样在整个运行环境中，&lt;code&gt;MyApplication&lt;/code&gt;就是正牌&lt;code&gt;Application&lt;/code&gt;了，完成&lt;code&gt;Application&lt;/code&gt;的替换。&lt;/p&gt;
&lt;p&gt;总结一下，刚才我们说了已经有两个动态加载的方案，激进方案和保守方案,而&lt;code&gt;Instant run&lt;/code&gt;的重启更新机制更像后者–保守方案即单&lt;code&gt;ClassLoader&lt;/code&gt;方案，首先，该种方案只有一个&lt;code&gt;ClassLoader&lt;/code&gt;，只不过是通过替换&lt;code&gt;Application&lt;/code&gt;达到的替换&lt;code&gt;mLoadedApk&lt;/code&gt;进而替换&lt;code&gt;ClassLoader&lt;/code&gt;的目的，并没有涉及到缓存&lt;code&gt;mPackage&lt;/code&gt;然后dexList也是它自己维护的。&lt;/p&gt;
&lt;h2 id=&quot;Instant_run__u70ED_u66F4_u65B0_u673A_u5236&quot;&gt;&lt;a href=&quot;#Instant_run__u70ED_u66F4_u65B0_u673A_u5236&quot; class=&quot;headerlink&quot; title=&quot;Instant run 热更新机制&quot;&gt;&lt;/a&gt;Instant run 热更新机制&lt;/h2&gt;&lt;p&gt;Instant run哪里用到的热更新机制呢？还记得刚才我们提到的Socket通信吗，其中S端也就是手机客户端，接收到热更新的消息会执行下面的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleHotSwapPatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; updateMode, @NonNull ApplicationPatch patch)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           String dexFile = FileManager.writeTempDexFile(patch.getBytes());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           String nativeLibraryPath = FileManager.getNativeLibraryFolder().getPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//新建一个ClassLoader，dexFile是刚更新的插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           DexClassLoader dexClassLoader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DexClassLoader(dexFile,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   mApplication.getCacheDir().getPath(), nativeLibraryPath,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   getClass().getClassLoader());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;// we should transform this process with an interface/impl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Class&amp;lt;?&amp;gt; aClass = Class.forName(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;string&quot;&gt;&quot;com.android.tools.fd.runtime.AppPatchesLoaderImpl&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, dexClassLoader);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               PatchesLoader loader = (PatchesLoader) aClass.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               String[] getPatchedClasses = (String[]) aClass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       .getDeclaredMethod(&lt;span class=&quot;string&quot;&gt;&quot;getPatchedClasses&quot;&lt;/span&gt;).invoke(loader);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//loader是PatchesLoader的一个实例，调用load方法加载插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!loader.load()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   updateMode = UPDATE_MODE_COLD_SWAP;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               updateMode = UPDATE_MODE_COLD_SWAP;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Throwable e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           updateMode = UPDATE_MODE_COLD_SWAP;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; updateMode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到根据单个dexFile新建了一个&lt;code&gt;ClassLoader&lt;/code&gt;，然后调用&lt;code&gt;loader.load()&lt;/code&gt;方法，&lt;code&gt;loader&lt;/code&gt;是&lt;code&gt;PatchesLoader&lt;/code&gt;接口的实例，&lt;code&gt;PatchesLoader&lt;/code&gt;接口的一个实现类&lt;code&gt;AppPatchesLoaderImpl&lt;/code&gt;，该类中记录了哪些修改的类。看一下&lt;code&gt;load&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//遍历已记录的所有修改的类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String className : getPatchedClasses()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ClassLoader cl = getClass().getClassLoader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//我们刚才说的修改的类名后面都有$override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Class&amp;lt;?&amp;gt; aClass = cl.loadClass(className + &lt;span class=&quot;string&quot;&gt;&quot;$override&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Object o = aClass.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//1.**反射修改原类中的$change字段为修改后的值**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Class&amp;lt;?&amp;gt; originalClass = cl.loadClass(className);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Field changeField = originalClass.getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;$change&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// force the field accessibility as the class might not be &quot;visible&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// from this package.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                changeField.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// If there was a previous change set, mark it as obsolete:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Object previous = changeField.get(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (previous != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    Field isObsolete = previous.getClass().getDeclaredField(&lt;span class=&quot;string&quot;&gt;&quot;$obsolete&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isObsolete != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        isObsolete.set(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                changeField.set(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, o);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Instant run&lt;/code&gt;的热更新原理可以概述为：&lt;br&gt;1.第一次运行，应用&lt;code&gt;transform API&lt;/code&gt;修改字节码。&lt;br&gt;输出目录在&lt;code&gt;app/build/intermediates/transforms/instantRun/debug/folders/1/&lt;/code&gt;，给所有的类添加&lt;code&gt;$change&lt;/code&gt;字段，&lt;code&gt;$change&lt;/code&gt;为&lt;code&gt;IncrementalChange&lt;/code&gt;类型，&lt;code&gt;IncrementalChange&lt;/code&gt;是个接口。如果&lt;code&gt;$change&lt;/code&gt;不为空，去调用&lt;code&gt;$change&lt;/code&gt;的&lt;code&gt;access$dispatch&lt;/code&gt;方法，参数为方法签名字符串和方法参数数组，否则调用原逻辑。&lt;br&gt;load方法中会去加载全部补丁类，并赋值给对应原类的&lt;code&gt;$change&lt;/code&gt;。&lt;br&gt;这也验证了我们说它是多&lt;code&gt;ClassLoader&lt;/code&gt;方案。&lt;/p&gt;
&lt;p&gt;2.所有修改的类有&lt;code&gt;gradle plugin&lt;/code&gt;自动生成，类名在原名后面添加$override，复制修改后类的大部分方法，实现IncrementalChange 接口的access$dispatch方法，该方法会根据传递过来的方法签名，调用本类的同名方法。&lt;/p&gt;
&lt;p&gt;那么也就是说只要把原类的&lt;code&gt;$change&lt;/code&gt;字段设置为该类，那就会调用该类的&lt;code&gt;access$dispatch&lt;/code&gt;方法，就会使用修改后的方法了。上面代码1处就通过反射修改了原类中的&lt;code&gt;$change&lt;/code&gt;为修改后补丁类中的值。&lt;code&gt;AppPatchesLoaderImpl&lt;/code&gt;记录了所有被修改的类，也会被打进补丁dex。&lt;/p&gt;
&lt;p&gt;总结一下，可以看到&lt;code&gt;Instant run&lt;/code&gt;热更新是多&lt;code&gt;ClassLoader&lt;/code&gt;加载方案，每个插件dex都有一个&lt;code&gt;ClassLoader&lt;/code&gt;，如果插件需要升级，直接重新创建一个自定的&lt;code&gt;ClassLoader&lt;/code&gt;加载新的插件。但是目前来看，&lt;code&gt;Instant run&lt;/code&gt;修改java代码大部分情况下都是重启更新机制，可能热更新机制还有bug。资源更新是热更新，重启对应Activity就可以。&lt;/p&gt;
&lt;h1 id=&quot;u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Instant run&lt;/code&gt;看下来真的有好多东西，其中就以替换&lt;code&gt;Application&lt;/code&gt;和动态加载尤为重要，关于动态加载，完全可以根据&lt;code&gt;Instant run&lt;/code&gt;的实现方式完成一个热修复和重启修复相结合的更新框架，用于线上bug的修复和功能更新，并且可以支持资源文件的更新，是无侵入性的更新框架，最重要的一点，这是官方支持的。但是，性能肯定会有所影响，实际开发中使用&lt;code&gt;Instant run&lt;/code&gt;编译其实还有很多的问题，而且app初始化时使用的很多反射，这也直接导致app的启动速度降低好多。&lt;/p&gt;
&lt;p&gt;另外一点关于Application的替换是基于&lt;a href=&quot;https://github.com/bazelbuild/bazel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bazel&lt;/a&gt;(一种构建工具，类似于burk)中的&lt;a href=&quot;https://github.com/bazelbuild/bazel/blob/master/src/tools/android/java/com/google/devtools/build/android/incrementaldeployment/StubApplication.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StubApplication&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;u53C2_u8003&quot;&gt;&lt;a href=&quot;#u53C2_u8003&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blogs.360.cn/blog/proxydelegate-application/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android的Proxy/Delegate Application框架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://weishu.me/2016/04/05/understand-plugin-framework-classloader/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android 插件化原理解析——插件加载机制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jiajixin.cn/2015/11/25/instant-run/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Instant Run 浅析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/0400fb58d086&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Instant Run原理解析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Android studio 2.0 Stable&lt;/code&gt;版本中集成了&lt;code&gt;In
    
    </summary>
    
    
      <category term="Android" scheme="http://w4lle.github.io/tags/Android/"/>
    
      <category term="Install run" scheme="http://w4lle.github.io/tags/Install-run/"/>
    
      <category term="动态加载" scheme="http://w4lle.github.io/tags/%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD/"/>
    
      <category term="热更新" scheme="http://w4lle.github.io/tags/%E7%83%AD%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>前端基础(一)--CSS布局基础</title>
    <link href="http://w4lle.github.io/2016/04/17/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80-%E4%B8%80-CSS%E5%B8%83%E5%B1%80%E5%9F%BA%E7%A1%80/"/>
    <id>http://w4lle.github.io/2016/04/17/前端基础-一-CSS布局基础/</id>
    <published>2016-04-17T14:26:23.000Z</published>
    <updated>2016-04-17T15:38:35.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u76D2_u6A21_u578B&quot;&gt;&lt;a href=&quot;#u76D2_u6A21_u578B&quot; class=&quot;headerlink&quot; title=&quot;盒模型&quot;&gt;&lt;/a&gt;盒模型&lt;/h1&gt;&lt;p&gt;CSS中， Box Model叫盒模型（或框模型），Box Model规定了元素框处理元素内容（element content）、内边距（padding）、边框（border） 和 外边距（margin） 的方式。这种方式基本类似于Android开发中的布局方式，所以对于Android developer学习前端布局方式可以很快的入门。但是有一点，在Android中设置margin和padding的顺序是left、top、right、bottom，比如&lt;code&gt;setMargin(10, 20, 30, 20)&lt;/code&gt;分别代表左上右下的间距分别为10px,20px,30px,20px;但是在CSS中的顺序是top、right、bottom、left，比如&lt;code&gt;margin: [10px, 20px, 30px, 20px]&lt;/code&gt;分别代表左上右下间距分别为20px,10px,20px,30px。&lt;br&gt;概述图如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/box-model.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;u5B9A_u4F4D_u57FA_u7840&quot;&gt;&lt;a href=&quot;#u5B9A_u4F4D_u57FA_u7840&quot; class=&quot;headerlink&quot; title=&quot;定位基础&quot;&gt;&lt;/a&gt;定位基础&lt;/h1&gt;&lt;h2 id=&quot;position_u5B9A_u4F4D&quot;&gt;&lt;a href=&quot;#position_u5B9A_u4F4D&quot; class=&quot;headerlink&quot; title=&quot;position定位&quot;&gt;&lt;/a&gt;&lt;code&gt;position&lt;/code&gt;定位&lt;/h2&gt;&lt;p&gt;&lt;code&gt;position&lt;/code&gt;包括以下几种类型的定位&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;static 默认值。任意 position: static; 的元素不会被特殊的定位。一个 static 元素表示它不会被“positioned”，一个 position 属性被设置为其他值的元素表示它会被“positioned”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;relative 相对布局，在原有基础上偏离使框偏离某个方向固定距离。跟Android中的布局方式很像&lt;br&gt;例子&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.relative2 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  position: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  top: -20px; //在原有top位置上向上偏移-20px&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  left: 20px; //在原有left位置上向左偏移20px&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  background-color: white;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  width: 500px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;absolute 绝对布局，向上寻找使用过&lt;code&gt;position&lt;/code&gt;定位过(除了默认值static外)的祖先元素，然后依据该元素进行定位。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.relative&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; relative&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;600px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.absolute&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; absolute&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;120px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;300px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/absolute.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fixed 固定定位，相对于视窗来定位，这意味着即便页面滚动，它还是会停留在相同的位置。相当于在Android开发中&lt;code&gt;FrameLayout&lt;/code&gt;中的某个元素指定&lt;code&gt;layout_gravity&lt;/code&gt;使其固定在根布局的某个固定的位置。&lt;br&gt;例子&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.fixed&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; fixed&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;bottom&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;number&quot;&gt;200px&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; white&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该元素的位置始终在右下角保持不变。&lt;/p&gt;
&lt;h2 id=&quot;float_u6D6E_u52A8&quot;&gt;&lt;a href=&quot;#float_u6D6E_u52A8&quot; class=&quot;headerlink&quot; title=&quot;float浮动&quot;&gt;&lt;/a&gt;&lt;code&gt;float&lt;/code&gt;浮动&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;浮动的框可以向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以这样理解，比如&lt;code&gt;float: left&lt;/code&gt;就是向左移动，直到坐边缘碰到根元素或者另外一个佛洞的边框的边缘。也就是说，如果好好几个向左浮动的元素，那么它们是从左到右依次排列的。&lt;br&gt;如下面的图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/float1.png&quot; alt=&quot;image&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/float2.png&quot; alt=&quot;image&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/float3.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;clear_u6E05_u9664_u6D6E_u52A8&quot;&gt;&lt;a href=&quot;#clear_u6E05_u9664_u6D6E_u52A8&quot; class=&quot;headerlink&quot; title=&quot;clear清除浮动&quot;&gt;&lt;/a&gt;&lt;code&gt;clear&lt;/code&gt;清除浮动&lt;/h2&gt;&lt;p&gt;clear 属性定义了元素的哪边上不允许出现浮动元素。&lt;br&gt;具体的例子参考&lt;a href=&quot;http://zh.learnlayout.com/clear.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;u4E09_u680F_u5F0F_u5E03_u5C40&quot;&gt;&lt;a href=&quot;#u4E09_u680F_u5F0F_u5E03_u5C40&quot; class=&quot;headerlink&quot; title=&quot;三栏式布局&quot;&gt;&lt;/a&gt;三栏式布局&lt;/h1&gt;&lt;p&gt;ife其中的一个任务&lt;a href=&quot;http://ife.baidu.com/task/detail?taskId=3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;三栏式布局&lt;/a&gt;&lt;br&gt;就是通过CSS的布局基础知识来写的。包括position和float。&lt;/p&gt;
&lt;p&gt;代码在这里&lt;a href=&quot;https://github.com/w4lle/ife_baidu/tree/master/task3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;三栏式布局&lt;/a&gt;&lt;br&gt;demo &lt;a href=&quot;http://w4lle.github.io/ife_baidu/task3/task3.html&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;u53C2_u8003&quot;&gt;&lt;a href=&quot;#u53C2_u8003&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.learnlayout.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;learnlayout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3school.com.cn/css/css_positioning.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;w3school&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u76D2_u6A21_u578B&quot;&gt;&lt;a href=&quot;#u76D2_u6A21_u578B&quot; class=&quot;headerlink&quot; title=&quot;盒模型&quot;&gt;&lt;/a&gt;盒模型&lt;/h1&gt;&lt;p&gt;CSS中， Box Model叫盒模型（或框模型），Box Model规定了
    
    </summary>
    
    
      <category term="CSS" scheme="http://w4lle.github.io/tags/CSS/"/>
    
      <category term="前端" scheme="http://w4lle.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Apk包瘦身笔记</title>
    <link href="http://w4lle.github.io/2016/04/10/Apk%E5%8C%85%E7%98%A6%E8%BA%AB%E7%AC%94%E8%AE%B0/"/>
    <id>http://w4lle.github.io/2016/04/10/Apk包瘦身笔记/</id>
    <published>2016-04-10T11:11:51.000Z</published>
    <updated>2016-04-11T01:10:04.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;随着业务功能的不断更迭，apk安装包的体积越来越大，最新的薄荷app android版本的安装包大小已经达到了22.5M，过大的安装包对于用户的体验来说会造成不好的影响，所以减小apk包的大小就显得尤为重要。&lt;/p&gt;
&lt;h1 id=&quot;u95EE_u9898_u539F_u56E0&quot;&gt;&lt;a href=&quot;#u95EE_u9898_u539F_u56E0&quot; class=&quot;headerlink&quot; title=&quot;问题原因&quot;&gt;&lt;/a&gt;问题原因&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://nimbledroid.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NimbleDroid&lt;/a&gt;网站可以分析出apk安装包的各种大文件排行和各种依赖包的方法数，我们比较关注的是大文件的大小。上图&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/large_file1.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;不看不知道，一看真是吓一跳，超过100k的图片文件就那么多，而且超过300k的就有7个之多。&lt;br&gt;还有两个MP3文件也很大。&lt;/p&gt;
&lt;h1 id=&quot;u89E3_u51B3_u529E_u6CD5&quot;&gt;&lt;a href=&quot;#u89E3_u51B3_u529E_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h1&gt;&lt;h2 id=&quot;u8D44_u6E90_u6DF7_u6DC6&quot;&gt;&lt;a href=&quot;#u8D44_u6E90_u6DF7_u6DC6&quot; class=&quot;headerlink&quot; title=&quot;资源混淆&quot;&gt;&lt;/a&gt;资源混淆&lt;/h2&gt;&lt;p&gt;资源混淆的方案采用的微信团队的&lt;a href=&quot;https://github.com/shwenzhang/AndResGuard?spm=a313e.7916648.0.0.wwht7B&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndResGuard&lt;/a&gt;。使用方法输入一个apk文件，压缩混淆后输出一个apk包，采用引用gradle插件的方式集成到项目中，但是插件并不支持，所以就需要适配多渠道打包。薄荷项目中多渠道打包使用的是美团的方案，参考&lt;a href=&quot;http://www.open-open.com/lib/view/open1418262988402.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android批量打包提速&lt;/a&gt;&lt;br&gt;方法如下&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;project&lt;/span&gt;.afterEvaluate &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//在Release后执行资源混淆，然后多渠道打包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//打包命令 ./gradlew resguard&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tasks.getByName(&lt;span class=&quot;string&quot;&gt;&quot;resguard&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        it.&lt;span class=&quot;keyword&quot;&gt;doLast&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;channel package task begin&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; fileName = &lt;span class=&quot;string&quot;&gt;&quot;one_v$&amp;#123;defaultConfig.versionName&amp;#125;_$&amp;#123;releaseTime()&amp;#125;_signed_7zip_aligned.apk&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; rApk = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;app/build/outputs/apk/AndResProguard/&quot;&lt;/span&gt; + fileName)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rApk.exists()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;resGuard apk exits begin channel package&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                packageChannel(rApk.absolutePath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行完resguard混淆压缩后生成apk文件，调用python脚本执行多渠道打包。&lt;br&gt;还有一点需要注意的是，使用该方案要注意动态查找id导致找不到id的问题。需要添加白名单，项目中有明确的说明。但是对于引用第三方项目较多的来说，挨个添加id就很不现实了。&lt;br&gt;所以在白名单中添加所有的id&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//for all id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;string&quot;&gt;&quot;com.boohee.one.R.id.*&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;集成改方案后apk包大概较小了4M。并且资源文件也已经混淆，资源路径长路径变成段路径&lt;br&gt;&lt;code&gt;res/drawable/icon -&amp;gt; res/drawable/a&lt;/code&gt;&lt;br&gt;对于反编译apk来说难度增加了。&lt;/p&gt;
&lt;h2 id=&quot;u5220_u9664_u65E0_u7528_u4EE3_u7801_u548C_u8D44_u6E90&quot;&gt;&lt;a href=&quot;#u5220_u9664_u65E0_u7528_u4EE3_u7801_u548C_u8D44_u6E90&quot; class=&quot;headerlink&quot; title=&quot;删除无用代码和资源&quot;&gt;&lt;/a&gt;删除无用代码和资源&lt;/h2&gt;&lt;p&gt;在Android Studio中使用lint分析无用的文件&lt;br&gt;Analyze -&amp;gt; Run Inspection by Name&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;unusedResources&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;会列出无用资源列表，特别是图片全部干掉。&lt;br&gt;另外一点，由于项目更新迭代快，业务功能更改比较频繁，这就导致了项目中的无用代码特别多，但是依靠lint检查就比较有限，需要我们根据项目功能手动删除。删除无用代码后又会引出很多无用的资源文件，lint检查后再删除一遍。&lt;br&gt;做完这一步大概减少了1.5M左右。但是还有好多无用的代码还没有删除，以后有时间再处理。&lt;/p&gt;
&lt;h2 id=&quot;u53BB_u9664_u65E0_u7528_u7684_u8BED_u8A00_u8D44_u6E90&quot;&gt;&lt;a href=&quot;#u53BB_u9664_u65E0_u7528_u7684_u8BED_u8A00_u8D44_u6E90&quot; class=&quot;headerlink&quot; title=&quot;去除无用的语言资源&quot;&gt;&lt;/a&gt;去除无用的语言资源&lt;/h2&gt;&lt;p&gt;具体项目具体执行，对于没有国际化的项目比如薄荷，在build.gradle中添加一句&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defaultConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resConfigs &lt;span class=&quot;string&quot;&gt;&quot;zh&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只使用中文资源，不光对本项目生效，还会对依赖的项目生效，比如support包。这样打包后只会打包中文资源，大概减小了1M左右。&lt;/p&gt;
&lt;h2 id=&quot;u5220_u9664_u591A_u4F59_u7684so_u5E93&quot;&gt;&lt;a href=&quot;#u5220_u9664_u591A_u4F59_u7684so_u5E93&quot; class=&quot;headerlink&quot; title=&quot;删除多余的so库&quot;&gt;&lt;/a&gt;删除多余的so库&lt;/h2&gt;&lt;p&gt;薄荷一直以来至保留armable，这一点可以根据具体项目来定。&lt;/p&gt;
&lt;h2 id=&quot;u6DF7_u6DC6&quot;&gt;&lt;a href=&quot;#u6DF7_u6DC6&quot; class=&quot;headerlink&quot; title=&quot;混淆&quot;&gt;&lt;/a&gt;混淆&lt;/h2&gt;&lt;p&gt;Proguard是编译时对java代码进行压缩，混淆，优化，预编译等操作的集成化工具。达到删除冗余，增加安全防护，减小大小的功效。薄荷一直以来并没有加入代码混淆，一方面原因是项目越来越大，混淆的话如果测试不充分很容易出问题，另一方面，薄荷一直提倡开源，并且核心并不在app端，并且有很多初学者会反编译薄荷app学习一些开发技巧。但是，对于提升用户体验来说这些都显得微不足道。我们也在着手做相关的混淆工作。&lt;/p&gt;
&lt;h2 id=&quot;u5176_u4F59_u4E00_u4E9B_u5EFA_u8BAE&quot;&gt;&lt;a href=&quot;#u5176_u4F59_u4E00_u4E9B_u5EFA_u8BAE&quot; class=&quot;headerlink&quot; title=&quot;其余一些建议&quot;&gt;&lt;/a&gt;其余一些建议&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;tiny图片处理 目前所知图片压缩效果最好的网站。蘑菇街写了tiny的gradle&lt;a href=&quot;https://github.com/mogujie/TinyPIC_Gradle_Plugin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;插件&lt;/a&gt;，薄荷还没有实践&lt;/li&gt;
&lt;li&gt;删除音频文件 薄荷项目中有一些音频文件，好在下个版本改业务功能即将下线，所以这些文件可以直接删除；另外一种方法是可以走网络获取，在线化。&lt;/li&gt;
&lt;li&gt;用更小的库&lt;/li&gt;
&lt;li&gt;png转成webp 可能会有点兼容性问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;u53C2_u8003&quot;&gt;&lt;a href=&quot;#u53C2_u8003&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jaq.alibaba.com/community/art/show?spm=a313e.7916646.24000001.3.T8AIXY&amp;amp;articleid=219&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;APK瘦身记，如何实现高达53%的压缩效果&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&amp;amp;mid=208135658&amp;amp;idx=1&amp;amp;sn=ac9bd6b4927e9e82f9fa14e396183a8f#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;安装包立减1M–微信Android资源混淆打包工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jayfeng.com/2015/12/29/APK%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;APK瘦身实践&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/UsherFor/article/details/46827587&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何将apk大小减少6M的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;随着业务功能的不断更迭，apk安装包的体积越来越大，最新的薄荷app android版本的安装包大小已经
    
    </summary>
    
    
      <category term="apk瘦身" scheme="http://w4lle.github.io/tags/apk%E7%98%A6%E8%BA%AB/"/>
    
      <category term="优化" scheme="http://w4lle.github.io/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Android关闭通知消息权限无法弹出Toast的解决方案</title>
    <link href="http://w4lle.github.io/2016/03/27/Android%E5%85%B3%E9%97%AD%E9%80%9A%E7%9F%A5%E6%B6%88%E6%81%AF%E6%9D%83%E9%99%90%E6%97%A0%E6%B3%95%E5%BC%B9%E5%87%BAToast%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://w4lle.github.io/2016/03/27/Android关闭通知消息权限无法弹出Toast的问题解决方案/</id>
    <published>2016-03-27T11:47:28.000Z</published>
    <updated>2016-03-27T13:09:58.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在之前一段时间里经常有用户反馈无法看到薄荷app弹出的消息提示，导致用户对一些使用场景感到很困惑。猜测可能是由于用户关闭了薄荷app的通知消息的权限导致的问题，测试后发现果真如此。&lt;/p&gt;
&lt;h1 id=&quot;u539F_u56E0&quot;&gt;&lt;a href=&quot;#u539F_u56E0&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h1&gt;&lt;p&gt;跟踪Toast的源代码，&lt;code&gt;make&lt;/code&gt;方法省略，做了一些初始化的工作，&lt;code&gt;show&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mNextView == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;string&quot;&gt;&quot;setView must have been called&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　INotificationManager service = getService();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　String pkg = mContext.getPackageName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　TN tn = mTN;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　tn.mNextView = mNextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　service.enqueueToast(pkg, tn, mDuration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RemoteException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　　　&lt;span class=&quot;comment&quot;&gt;// Empty&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; INotificationManager &lt;span class=&quot;title&quot;&gt;getService&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sService != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sService = INotificationManager.Stub.asInterface(ServiceManager.getService(&lt;span class=&quot;string&quot;&gt;&quot;notification&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;熟悉&lt;code&gt;binder&lt;/code&gt;通讯的同学应该都知道，其实调用了&lt;code&gt;NotificationManagerService.service.enqueueToast&lt;/code&gt;方法进入toast队列，进行相应的逻辑处理后回调给Toast中的&lt;code&gt;TN&lt;/code&gt;，&lt;code&gt;TN&lt;/code&gt;其实就是一个&lt;code&gt;aidl&lt;/code&gt;的&lt;code&gt;stub&lt;/code&gt;实现，相当于&lt;code&gt;Client&lt;/code&gt;端，用来接收&lt;code&gt;Service&lt;/code&gt;端发来的消息。看下&lt;code&gt;TN&lt;/code&gt;中的show方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleShow&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			... &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mWM = (WindowManager)context.getSystemService(Context.WINDOW_SERVICE);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mWM.removeView(mView);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mWM.addView(mView, mParams);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            trySendAccessibilityEvent();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过&lt;code&gt;WinwodManager&lt;/code&gt;添加一个&lt;code&gt;view&lt;/code&gt;显示提示消息。&lt;br&gt;总结来说就是toast的显示过程通过IPC通讯由&lt;code&gt;NotificationManagerService&lt;/code&gt;维护一个toast队列，然后通知给Toast中的客户端&lt;code&gt;TN&lt;/code&gt;调用&lt;code&gt;WindowManager&lt;/code&gt;添加view。&lt;br&gt;那么，如果关闭通知栏消息权限，会影响&lt;code&gt;NotificationManagerService&lt;/code&gt;队列的逻辑处理过程，导致不能通知&lt;code&gt;TN&lt;/code&gt;显示出视图。&lt;/p&gt;
&lt;h1 id=&quot;u89E3_u51B3&quot;&gt;&lt;a href=&quot;#u89E3_u51B3&quot; class=&quot;headerlink&quot; title=&quot;解决&quot;&gt;&lt;/a&gt;解决&lt;/h1&gt;&lt;p&gt;通过上面的分析，我们可以绕过&lt;code&gt;NotificationManagerService&lt;/code&gt;，我们自己维护一个toast队列，处理相关的逻辑，进行显示，定时取消。关键代码&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;activeQueue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BooheeToast toast = mQueue.peek();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (toast == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAtomicInteger.decrementAndGet();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHanlder.post(toast.mShow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHanlder.postDelayed(toast.mHide, toast.mDuration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHanlder.postDelayed(mActivite, toast.mDuration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;mQueue&lt;/code&gt;维护了&lt;code&gt;Toast&lt;/code&gt;的队列，队列采用&lt;code&gt;FIFO&lt;/code&gt;调度，每次调用&lt;code&gt;show()&lt;/code&gt;方法触发&lt;code&gt;activeQueue()&lt;/code&gt;方法，从队列中取出toast进行显示，然后定时取消。&lt;/p&gt;
&lt;h1 id=&quot;u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;Google把Toast视为系统级别的消息通知，其实是不合理的，在app前台可见的情况下，有些关键信息需要提供给用户，如果关闭了消息通知权限，那么用户就会看不到这些关键的提示就会很困惑，直接影响用户体验，并且在Android5.0之后在设置中就可以关闭app的消息权限，Toast作为一个系统级别的消息提示设计者真的挺缺心眼的。虽然MD中有SnackBar作为消息提示，其原理就是在当前界面找到根视图，在根视图&lt;code&gt;addView()&lt;/code&gt;，达到弹出提示的目的，但是请原谅我的审美不够高，SnackBar真的很丑，并且最近Google又支持BottomSheet，两个叠加到一起，我的天，画面太美，我不敢看。还有就是必须要拿到当前的content，对于用Application的context弹出toast的方案来说适配起来修改比较麻烦。很明显，Toast就应该是app级的消息提示，我们的解决方案也正是这么做的。&lt;/p&gt;
&lt;h1 id=&quot;u53C2_u8003&quot;&gt;&lt;a href=&quot;#u53C2_u8003&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;《Android开发艺术探索》第八章 理解Window和WindowManager&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://caizhitao.com/2016/02/09/android-toast-compat/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;解决小米MIUI系统上后台应用没法弹Toast的问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://androidxref.com/6.0.1_r10/xref/frameworks/base/core/java/android/widget/Toast.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Toast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://androidxref.com/6.0.1_r10/xref/frameworks/base/services/core/java/com/android/server/notification/NotificationManagerService.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NotificationManagerService&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在之前一段时间里经常有用户反馈无法看到薄荷app弹出的消息提示，导致用户对一些使用场景感到很困惑。猜测可
    
    </summary>
    
    
      <category term="Android" scheme="http://w4lle.github.io/tags/Android/"/>
    
      <category term="Toast" scheme="http://w4lle.github.io/tags/Toast/"/>
    
      <category term="通知消息权限" scheme="http://w4lle.github.io/tags/%E9%80%9A%E7%9F%A5%E6%B6%88%E6%81%AF%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>前端基础(零)--CSS基础</title>
    <link href="http://w4lle.github.io/2016/03/19/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80-%E9%9B%B6-CSS%E5%9F%BA%E7%A1%80/"/>
    <id>http://w4lle.github.io/2016/03/19/前端基础-零-CSS基础/</id>
    <published>2016-03-19T14:52:40.000Z</published>
    <updated>2016-03-19T16:49:08.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;最近跟小伙伴们在&lt;a href=&quot;/ife.baidu.com&quot;&gt;百度前端技术学院&lt;/a&gt;学习前端相关的知识，接下来一系列博客会记录学习的过程和知识点，这是第一篇文章CSS基础。&lt;/p&gt;
&lt;p&gt;开发工具：sublime text 3&lt;/p&gt;
&lt;p&gt;主要插件：&lt;a href=&quot;http://docs.emmet.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Emmet&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;CSS&quot;&gt;&lt;a href=&quot;#CSS&quot; class=&quot;headerlink&quot; title=&quot;CSS&quot;&gt;&lt;/a&gt;CSS&lt;/h1&gt;&lt;h2 id=&quot;u4EC0_u4E48_u662FCSS&quot;&gt;&lt;a href=&quot;#u4EC0_u4E48_u662FCSS&quot; class=&quot;headerlink&quot; title=&quot;什么是CSS&quot;&gt;&lt;/a&gt;什么是CSS&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;层叠样式表 (Cascading Style Sheets)，常缩写为 CSS， 是一种 样式表&lt;br&gt;(stylesheet) 语言，用来描述 HTML、XML（包括各种 XML 语言如 SVG、XHTML）文档&lt;br&gt;的呈现。CSS 描述怎样在屏幕上渲染结构化元素。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;u4E3A_u4EC0_u4E48_u4F7F_u7528CSS&quot;&gt;&lt;a href=&quot;#u4E3A_u4EC0_u4E48_u4F7F_u7528CSS&quot; class=&quot;headerlink&quot; title=&quot;为什么使用CSS&quot;&gt;&lt;/a&gt;为什么使用CSS&lt;/h2&gt;&lt;p&gt;我们知道，html文件主要携带内容，虽然html也可以进行布局相关的操作，但是当浏览器的默认渲染规则不能很好的将我们定义好的布局展示出来，可能会导致显示不统一的问题，所以就将内容和表现进行分离，由CSS专门负责变现，html负责携带内容，可以很好的解除耦合，方便扩展，例如，需要全局的更新界面布局，那么也只需要修改css。可以说，css极大的提高了工作效率。就有点类似于android开发中的style，只负责配置各种view相关的属性值，而xml声明就有些类似于html，只是声明ImageView代表一个特定的view，表现形式完全可以交给style去处理。但是，个人感觉由于css的选择器的存在，css要比android中的style高明许多。&lt;/p&gt;
&lt;h1 id=&quot;CSS_u57FA_u7840_u8BED_u6CD5&quot;&gt;&lt;a href=&quot;#CSS_u57FA_u7840_u8BED_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;CSS基础语法&quot;&gt;&lt;/a&gt;CSS基础语法&lt;/h1&gt;&lt;p&gt;看图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xs23g.com1.z0.glb.clouddn.com/CSS.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; Verdana, sans-serif&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;body元素的所有文字的字体都是Verdana。&lt;br&gt;CSS默认有集成的属性，也就是说默认情况下body下的所有字元素都会继承body的属性，就像android布局，父控件的属性也会它所有的字控件一样，例如在根布局设置&lt;code&gt;backgroud=&amp;quot;#eee&amp;quot;&lt;/code&gt;那么，该界面的基础色就是&lt;code&gt;#eee&lt;/code&gt;, css也是这样的。&lt;/p&gt;
&lt;h1 id=&quot;u9009_u62E9_u5668&quot;&gt;&lt;a href=&quot;#u9009_u62E9_u5668&quot; class=&quot;headerlink&quot; title=&quot;选择器&quot;&gt;&lt;/a&gt;选择器&lt;/h1&gt;&lt;p&gt;css的强大之处在于，选择器的可配置性，对于复杂的界面显示来说这点非常有用&lt;/p&gt;
&lt;h2 id=&quot;u9009_u62E9_u5668_u7684_u5206_u7EC4&quot;&gt;&lt;a href=&quot;#u9009_u62E9_u5668_u7684_u5206_u7EC4&quot; class=&quot;headerlink&quot; title=&quot;选择器的分组&quot;&gt;&lt;/a&gt;选择器的分组&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;h1&lt;/span&gt;,&lt;span class=&quot;tag&quot;&gt;h2&lt;/span&gt;,&lt;span class=&quot;tag&quot;&gt;h3&lt;/span&gt;,&lt;span class=&quot;tag&quot;&gt;h4&lt;/span&gt;,&lt;span class=&quot;tag&quot;&gt;h5&lt;/span&gt;,&lt;span class=&quot;tag&quot;&gt;h6&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; green&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码表示，每个选择器都不相互产生影响，只是写在了一起而已。&lt;/p&gt;
&lt;h2 id=&quot;u6D3E_u751F_u9009_u62E9_u5668&quot;&gt;&lt;a href=&quot;#u6D3E_u751F_u9009_u62E9_u5668&quot; class=&quot;headerlink&quot; title=&quot;派生选择器&quot;&gt;&lt;/a&gt;派生选择器&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;派生选择器就是通过依据元素在其位置的上下文关系来定义样式，以达到使标记更加简洁的&lt;br&gt;目的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; italic&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;font-weight&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; normal&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上面的例子中，只有 div 元素中的 p 元素的样式为斜体字，无需为 strong 元素定义特别的 class 或 id，代码更加简洁。当然，单独出现的div 和 p并不会受到影响。&lt;/p&gt;
&lt;h2 id=&quot;id__u9009_u62E9_u5668&quot;&gt;&lt;a href=&quot;#id__u9009_u62E9_u5668&quot; class=&quot;headerlink&quot; title=&quot;id 选择器&quot;&gt;&lt;/a&gt;id 选择器&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。以&lt;code&gt;#&lt;/code&gt;来定义&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#red&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;red&lt;/span&gt;&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;id&quot;&gt;#green&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;green&lt;/span&gt;&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;html这样写&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p id=&quot;red&quot;&amp;gt;这个段落是红色。&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p id=&quot;green&quot;&amp;gt;这个段落是绿色。&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是要注意，同一个html文件中同一个id只能使用一次，具体的原因请看&lt;a href=&quot;http://www.w3school.com.cn/xhtml/xhtml_structural_02.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;u7C7B_u9009_u62E9_u5668&quot;&gt;&lt;a href=&quot;#u7C7B_u9009_u62E9_u5668&quot; class=&quot;headerlink&quot; title=&quot;类选择器&quot;&gt;&lt;/a&gt;类选择器&lt;/h2&gt;&lt;p&gt;通过设置元素的 class 属性，可以为元素指定类名。与id不同的是，同一个class可以在同一个html文件中复用。以&lt;code&gt;.&lt;/code&gt;来定义&lt;/p&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;.center&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;text-align&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; center&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;html代码中这样用&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h1 class=&quot;center&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	This heading will be center-aligned&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p class=&quot;center&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	This paragraph will also be center-aligned.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;u57FA_u4E8E_u5173_u7CFB_u7684_u9009_u62E9_u5668&quot;&gt;&lt;a href=&quot;#u57FA_u4E8E_u5173_u7CFB_u7684_u9009_u62E9_u5668&quot; class=&quot;headerlink&quot; title=&quot;基于关系的选择器&quot;&gt;&lt;/a&gt;基于关系的选择器&lt;/h2&gt;&lt;p&gt;CSS有多种基于元素关系的选择器。通过它们我们可以更精确的选择元素。&lt;br&gt;常见的关系选择器&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;选择的元素&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A E&lt;/td&gt;
&lt;td&gt;任何是元素A的后代元素E (后代节点指A的子节点，子节点的子节点，以此类推)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A &amp;gt; E&lt;/td&gt;
&lt;td&gt;任何元素A的子元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E:first-child&lt;/td&gt;
&lt;td&gt;任何元素的第一个子元素E&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B + E&lt;/td&gt;
&lt;td&gt;任何元素B的下一个兄弟元素E&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B ~ E&lt;/td&gt;
&lt;td&gt;B元素后面的拥有共同父元素的兄弟元素E&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;u4F2A_u7C7B_u9009_u62E9_u5668&quot;&gt;&lt;a href=&quot;#u4F2A_u7C7B_u9009_u62E9_u5668&quot; class=&quot;headerlink&quot; title=&quot;伪类选择器&quot;&gt;&lt;/a&gt;伪类选择器&lt;/h2&gt;&lt;p&gt;CSS伪类（pseudo-class）是加在选择器后面的用来指定元素状态的关键字。&lt;/p&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:link&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#FF0000&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;#125;		&lt;span class=&quot;comment&quot;&gt;/* 未访问的链接 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:visited&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#00FF00&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;#125;	&lt;span class=&quot;comment&quot;&gt;/* 已访问的链接 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#FF00FF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;#125;	&lt;span class=&quot;comment&quot;&gt;/* 鼠标移动到链接上 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:active&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt; &lt;span class=&quot;hexcolor&quot;&gt;#0000FF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;#125;	&lt;span class=&quot;comment&quot;&gt;/* 选定的链接 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面表示a链接的各种状态的表示。&lt;/p&gt;
&lt;h2 id=&quot;u5C5E_u6027_u9009_u62E9_u5668&quot;&gt;&lt;a href=&quot;#u5C5E_u6027_u9009_u62E9_u5668&quot; class=&quot;headerlink&quot; title=&quot;属性选择器&quot;&gt;&lt;/a&gt;属性选择器&lt;/h2&gt;&lt;p&gt;属性选择器可以根据元素的属性及属性值来选择元素。&lt;br&gt;简单的示例&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*&lt;span class=&quot;attr_selector&quot;&gt;[title]&lt;/span&gt; &lt;span class=&quot;rules&quot;&gt;&amp;#123;&lt;span class=&quot;rule&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:&lt;span class=&quot;value&quot;&gt;red&lt;/span&gt;&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面表示把包含标题（title）的所有元素变为红色&lt;br&gt;在css中 &lt;code&gt;*&lt;/code&gt;可以替代任何元素&lt;/p&gt;
&lt;p&gt;上面所讲到的任意选择器，都可以通过组合的方式表达更复杂的元素间的关系，产生复杂的显示效果。&lt;/p&gt;
&lt;h1 id=&quot;u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;css是前端的基础，对于界面显示和布局来说至关重要，特别是css的选择器，相互组合可以产生非常复杂的效果。&lt;/p&gt;
&lt;p&gt;最后附上ife的提交任务二&lt;br&gt;&lt;a href=&quot;https://github.com/w4lle/ife_baidu/blob/master/task2%2Findex.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;代码地址&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://w4lle.github.io/ife_baidu/task2/index.html&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;最近跟小伙伴们在&lt;a href=&quot;/ife.baidu.com&quot;&gt;百度前端技术学院&lt;/a&gt;学习前端相关的
    
    </summary>
    
    
      <category term="CSS" scheme="http://w4lle.github.io/tags/CSS/"/>
    
      <category term="前端" scheme="http://w4lle.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>AndFix支持Multidex的解决方案</title>
    <link href="http://w4lle.github.io/2016/03/13/AndFix%E6%94%AF%E6%8C%81multidex%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://w4lle.github.io/2016/03/13/AndFix支持multidex解决方案/</id>
    <published>2016-03-13T13:42:11.000Z</published>
    <updated>2016-04-07T02:29:23.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在上一篇文章&lt;a href=&quot;http://w4lle.github.io/2016/03/03/Android%E7%83%AD%E8%A1%A5%E4%B8%81%E4%B9%8BAndFix%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/&quot;&gt;Android热补丁之AndFix原理解析&lt;/a&gt;中我们提到，AndFix的补丁文件是补丁生成工具apkPatch生成的，补丁文件&lt;code&gt;.apatch&lt;/code&gt;基于&lt;code&gt;dex diff&lt;/code&gt;的原理生成，简单来说就是对比两个apk包中的dex文件，代码在&lt;code&gt;DexFileFactory&lt;/code&gt;类中&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; DexBackedDexFile &lt;span class=&quot;title&quot;&gt;loadDexFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(File dexFile, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; api, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; experimental)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; loadDexFile(dexFile, &lt;span class=&quot;string&quot;&gt;&quot;classes.dex&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Opcodes(api, experimental));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面可以看到，只提取了apk包中的classes.dex文件，对于支持现阶段基本上所有的项目都是基于multidex方案的，那么如果apk包中有多个dex文件的话，AndFix的补丁工具就不会生效了。&lt;/p&gt;
&lt;h1 id=&quot;u89E3_u51B3_u65B9_u6848&quot;&gt;&lt;a href=&quot;#u89E3_u51B3_u65B9_u6848&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h1&gt;&lt;h2 id=&quot;u81EA_u5DF1_u91CD_u65B0_u5199_u4E00_u4E2A_u5DE5_u5177&quot;&gt;&lt;a href=&quot;#u81EA_u5DF1_u91CD_u65B0_u5199_u4E00_u4E2A_u5DE5_u5177&quot; class=&quot;headerlink&quot; title=&quot;自己重新写一个工具&quot;&gt;&lt;/a&gt;自己重新写一个工具&lt;/h2&gt;&lt;p&gt;补丁生成工具apkPatch是一个jar文件，但是阿里团队并没有开源它的具体实现，我们也只能通过反编译来分析它，所以如果要重新写一个的话，要根据反编译全部重新敲一遍代码，只在关键的部分修改代码来达到支持multidex的目的。但是这种方式很低级，效率太低。&lt;/p&gt;
&lt;h2 id=&quot;u53CD_u5C04&quot;&gt;&lt;a href=&quot;#u53CD_u5C04&quot; class=&quot;headerlink&quot; title=&quot;反射&quot;&gt;&lt;/a&gt;反射&lt;/h2&gt;&lt;p&gt;大家都知道，Java代码编译完会生成.class文件，就是一堆字节码。JVM会解释执行这些字节码，由于字节码的解释执行是在运行时进行的，那我们能否手工编写字节码，再由JVM执行呢？答案是肯定的。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;com.euler.patch.diff.DexDiffer&lt;/code&gt;类中，抽取dex文件并进行对比&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; DiffInfo &lt;span class=&quot;title&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(File newFile, File oldFile)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DexBackedDexFile newDexFile = DexFileFactory.loadDexFile(newFile, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DexBackedDexFile oldDexFile = DexFileFactory.loadDexFile(oldFile, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改为&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; DiffInfo &lt;span class=&quot;title&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(File newFile, File oldFile)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	HashSet&amp;lt;DexBackedClassDef&amp;gt; newset = getClassSet(newFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	HashSet&amp;lt;DexBackedClassDef&amp;gt; oldset = getClassSet(oldFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DiffInfo info = DiffInfo.getInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; contains = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Iterator&amp;lt;DexBackedClassDef&amp;gt; iter = newset.iterator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (iter.hasNext()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            DexBackedClassDef newClazz = iter.next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Iterator&amp;lt;DexBackedClassDef&amp;gt; iter2 = oldset.iterator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            contains = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (iter2.hasNext()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                DexBackedClassDef oldClazz = iter2.next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (newClazz.equals(oldClazz)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compareField(newClazz, oldClazz, info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compareMethod(newClazz, oldClazz, info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    contains = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!contains) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                info.addAddedClasses(newClazz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;抽取dex的&lt;code&gt;getClassSet&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; HashSet&amp;lt;DexBackedClassDef&amp;gt; &lt;span class=&quot;title&quot;&gt;getClassSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(File apkFile)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	ZipFile localZipFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ZipFile(apkFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	Enumeration localEnumeration = localZipFile.entries();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	HashSet&amp;lt;DexBackedClassDef&amp;gt; newset = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;DexBackedClassDef&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (localEnumeration.hasMoreElements()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ZipEntry localZipEntry = (ZipEntry) localEnumeration.nextElement();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//所有以.dex结尾的文件都会加载。这样就支持的multidex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (localZipEntry.getName().endsWith(&lt;span class=&quot;string&quot;&gt;&quot;.dex&quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		DexBackedDexFile newDexFile = DexFileFactory.loadDexFile(apkFile, localZipEntry.getName(), &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		FixedSizeSet&amp;lt;DexBackedClassDef&amp;gt; newclasses = (FixedSizeSet) newDexFile.getClasses();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mergeHashSet(newset, newclasses);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; newset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后将&lt;code&gt;DexDiffer&lt;/code&gt;这个类单独达成一个jar包&lt;code&gt;dexdiffer.jar&lt;/code&gt;，用于替换&lt;code&gt;apkPatch.jar&lt;/code&gt;包中的&lt;code&gt;DexDiffer&lt;/code&gt;类。加载的时候动态替换。&lt;/p&gt;
&lt;p&gt;新增一个main.jar包，&lt;code&gt;Main.java&lt;/code&gt;类&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            OriginLoader oloader = getOriginClassLoader(Main.class.getClassLoader());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            FixLoader floader = getFixClassLoader(Main.class.getClassLoader());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            oloader.otherClassLoder = floader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            oloader.otherLoadClassName = &lt;span class=&quot;string&quot;&gt;&quot;com.euler.patch.diff.DexDiffer&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            floader.otherClassLoder = oloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Class mainClass = oloader.loadClass(&lt;span class=&quot;string&quot;&gt;&quot;com.euler.patch.Main&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//通过反射得到apkpatch.jar中的main()方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Method mainMethod = mainClass.getDeclaredMethod(&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;, String[].class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mainMethod.setAccessible(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//执行apkpatch.jar中的main()方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mainMethod.invoke(mainClass, (Object)(args));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; OriginLoader &lt;span class=&quot;title&quot;&gt;getOriginClassLoader&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ClassLoader parent)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; MalformedURLException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        URL[] urls = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; URL[] &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OriginLoader loader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OriginLoader(urls, parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String path = Main.class.getProtectionDomain().getCodeSource().getLocation().getPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = path.lastIndexOf(File.separator) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path = path.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path = path + &lt;span class=&quot;string&quot;&gt;&quot;apkpatch.jar&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loader.addJar(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(path).toURI().toURL());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; loader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; FixLoader &lt;span class=&quot;title&quot;&gt;getFixClassLoader&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ClassLoader parent)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; MalformedURLException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        URL[] urls = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; URL[] &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FixLoader loader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FixLoader(urls, parent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String path = Main.class.getProtectionDomain().getCodeSource().getLocation().getPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = path.lastIndexOf(File.separator) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path = path.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path = path + &lt;span class=&quot;string&quot;&gt;&quot;dexdiffer.jar&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loader.addJar(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(path).toURI().toURL());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; loader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;工具的入口由&lt;code&gt;apkpatch.jar&lt;/code&gt;的&lt;code&gt;main()&lt;/code&gt;方法改为了&lt;code&gt;main.jar&lt;/code&gt;的&lt;code&gt;main()&lt;/code&gt;方法。所以在这里我们就可以动态替换相关的关键类和方法。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;OriginLoader&lt;/code&gt;的方法&lt;code&gt;findClass&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Class&amp;lt;?&amp;gt; findClass(String name) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Class clazz = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//上面设置的oloader.otherLoadClassName = 			//&quot;com.euler.patch.diff.DexDiffer&quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(name.equals(otherLoadClassName))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; otherClassLoder.loadClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        clazz = &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.findClass(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也就是说&lt;code&gt;OriginLoader&lt;/code&gt;在加载的时候如果类是&lt;code&gt;com.euler.patch.diff.DexDiffer&lt;/code&gt;，那么就会调用&lt;code&gt;FixLoader&lt;/code&gt;去加载我们刚刚生成的&lt;code&gt;dexdiff.jar&lt;/code&gt;中的&lt;code&gt;DexDiffer&lt;/code&gt;达到替换的目的。&lt;br&gt;&lt;code&gt;apkpatch.sh&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PRG=&lt;span class=&quot;string&quot;&gt;&quot;$0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; [ -h &lt;span class=&quot;string&quot;&gt;&quot;$PRG&quot;&lt;/span&gt; ] ; do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ls=`ls -ld &lt;span class=&quot;string&quot;&gt;&quot;$PRG&quot;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  link=`expr &lt;span class=&quot;string&quot;&gt;&quot;$ls&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;.*-&amp;gt; \(.*\)$&#39;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; expr &lt;span class=&quot;string&quot;&gt;&quot;$link&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;/.*&#39;&lt;/span&gt; &amp;gt; /dev/&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PRG=&lt;span class=&quot;string&quot;&gt;&quot;$link&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PRG=`dirname &lt;span class=&quot;string&quot;&gt;&quot;$PRG&quot;&lt;/span&gt;`/&lt;span class=&quot;string&quot;&gt;&quot;$link&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PRGDIR=`dirname &lt;span class=&quot;string&quot;&gt;&quot;$PRG&quot;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//入口改为main.jar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java -Xms512m -Xmx1024m -jar $PRGDIR/main.jar &lt;span class=&quot;string&quot;&gt;&quot;$@&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后的jar包有4个，main.jar, dexdiffer.jar, apkpatch.jar&lt;br&gt;方法代码参考&lt;a href=&quot;https://github.com/w4lle/andfix_apkpatch_support_multidex/blob/master/apkpatch.sh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;javassist_u4FEE_u6539class_u6587_u4EF6&quot;&gt;&lt;a href=&quot;#javassist_u4FEE_u6539class_u6587_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;javassist修改class文件&quot;&gt;&lt;/a&gt;javassist修改class文件&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jboss-javassist/javassist&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;javassist&lt;/a&gt;其实就是一个二方包，提供了运行时操作Java字节码的方法。Javassist就提供了一些方便的方法，让我们通过这些方法生成字节码。最后也是通过反射调用修改后的方法。&lt;/p&gt;
&lt;p&gt;使用方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Classpool负责用Javassist来控制字节码的修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ClassPool cp = ClassPool.getDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获得类文件名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CtClass cc = cp.get(&lt;span class=&quot;string&quot;&gt;&quot;com.euler.patch.diff.DexDiffer&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获得要修改的方法名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CtMethod m = cc.getDeclaredMethod(&lt;span class=&quot;string&quot;&gt;&quot;diff&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CtMethod.setBody(“这里是修改后的代码”); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CtClass.addMethod(ctMethod);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Class&amp;lt;?&amp;gt; c=CtClass.toClass();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Object o=c.newInstance();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Method method=o.getClass().getMethod(&lt;span class=&quot;string&quot;&gt;&quot;diff&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Class[]&amp;#123;&amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//调用字节码生成类的diff方法  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   method.invoke(o, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Object[]&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成&lt;code&gt;.class&lt;/code&gt;文件，然后替换&lt;code&gt;apkpatch.jar&lt;/code&gt;包中的&lt;code&gt;.class&lt;/code&gt;文件。&lt;br&gt;这种方法只用一个jar包就可以完成生成补丁的操作。&lt;/p&gt;
&lt;h1 id=&quot;u6700_u540E_u4E00_u6B65&quot;&gt;&lt;a href=&quot;#u6700_u540E_u4E00_u6B65&quot; class=&quot;headerlink&quot; title=&quot;最后一步&quot;&gt;&lt;/a&gt;最后一步&lt;/h1&gt;&lt;p&gt;先看代码，&lt;code&gt;AndFixaManager&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fix&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(File file, ClassLoader classLoader,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                List&amp;lt;String&amp;gt; classes)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; DexFile dexFile = DexFile.loadDex(file.getAbsolutePath(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   optfile.getAbsolutePath(), Context.MODE_PRIVATE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (saveFingerprint) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               mSecurityChecker.saveOptSig(optfile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ClassLoader patchClassLoader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClassLoader(classLoader) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Class&amp;lt;?&amp;gt; findClass(String className)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ClassNotFoundException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;comment&quot;&gt;// 代码1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   Class&amp;lt;?&amp;gt; clazz = dexFile.loadClass(className, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (clazz == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           &amp;amp;&amp;amp; className.startsWith(&lt;span class=&quot;string&quot;&gt;&quot;com.alipay.euler.andfix&quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Class.forName(className);&lt;span class=&quot;comment&quot;&gt;// annotation’s class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;comment&quot;&gt;// not found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;comment&quot;&gt;//代码2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;comment&quot;&gt;//add fix w4lle for multidex surpport&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (clazz == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Class.forName(className);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;comment&quot;&gt;//add end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (clazz == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClassNotFoundException(className);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码1处通过&lt;code&gt;classLoader&lt;/code&gt;去加载目标类，但是有一点要明确，一个运行的Android应用至少有2个&lt;code&gt;ClassLoader&lt;/code&gt;，一个是&lt;code&gt;BootClassLoader&lt;/code&gt;（系统启动的时候创建的），另外一个或多个是&lt;code&gt;PathClassLoader&lt;/code&gt;用于加载dex，每个dex文件由一个独立的&lt;code&gt;PathClassLoader&lt;/code&gt;去加载。也就是说如果目标类在dex2中，代码1是加载不了目标类的，所以会抛出&lt;code&gt;ClassNotFoundException&lt;/code&gt;。就像这样&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Caused by: java.lang.ClassNotFoundException: Didn&#39;t find class &quot;com.boohee.status.MsgCategoryActivity$2_CF&quot; on path: DexPathList[[zip file &quot;/data/app/com.boohee.one-1.apk&quot;, zip file &quot;/data/data/com.boohee.one/code_cache/secondary-dexes/com.boohee.one-1.apk.classes2.zip&quot;],nativeLibraryDirectories=[/data/app-lib/com.boohee.one-1, /vendor/lib, /system/lib]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	at java.lang.ClassLoader.loadClass(ClassLoader.java:511)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	at java.lang.ClassLoader.loadClass(ClassLoader.java:469)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;所以我们在代码2处添加了保护代码，保证目标类可以被加载。由于andfix官方并没有做这个支持，所以就不能通过gradle依赖，就需要我们把andfix的源码放到项目中然后修改。&lt;/p&gt;
&lt;h1 id=&quot;u53C2_u8003&quot;&gt;&lt;a href=&quot;#u53C2_u8003&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000004062880&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android动态加载基础 ClassLoader工作机制&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/alibaba/AndFix&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndFix&lt;/a&gt;，本文分析版本：&lt;a href=&quot;https://github.com/alibaba/AndFix/tree/c68d9811bd756ee418fce761ca113376ec9c4e66&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndFix:0.3.1&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在上一篇文章&lt;a href=&quot;http://w4lle.github.io/2016/03/03/And
    
    </summary>
    
    
      <category term="AndFix" scheme="http://w4lle.github.io/tags/AndFix/"/>
    
      <category term="multidex" scheme="http://w4lle.github.io/tags/multidex/"/>
    
      <category term="热更新" scheme="http://w4lle.github.io/tags/%E7%83%AD%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>Android热补丁之AndFix原理解析</title>
    <link href="http://w4lle.github.io/2016/03/03/Android%E7%83%AD%E8%A1%A5%E4%B8%81%E4%B9%8BAndFix%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/"/>
    <id>http://w4lle.github.io/2016/03/03/Android热补丁之AndFix原理解析/</id>
    <published>2016-03-03T06:43:44.000Z</published>
    <updated>2016-03-07T02:52:38.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;2015年下半年开源了很多Android热更新的项目，其中大部分是以QQ空间技术团队写的那篇&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI1MTA1MzM2Nw==&amp;amp;mid=400118620&amp;amp;idx=1&amp;amp;sn=b4fdd5055731290eef12ad0d17f39d4a&amp;amp;scene=1&amp;amp;srcid=1106Imu9ZgwybID13e7y2nEi#wechat_redirect&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;为依据写出的基于&lt;code&gt;multidex&lt;/code&gt;的热更新框架，包括&lt;a href=&quot;https://github.com/jasonross/Nuwa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nuwa&lt;/a&gt;、&lt;a href=&quot;https://github.com/dodola/HotFix&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HotFix&lt;/a&gt;、&lt;a href=&quot;https://github.com/bunnyblue/DroidFix&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DroidFix&lt;/a&gt;等；还有这篇文章的主角，阿里开源的&lt;a href=&quot;https://github.com/alibaba/AndFix&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndFix&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在这之前，热补丁框架并没有那么火，原因无非就是要么用起来太重，要么不支持ART。比如携程出品的&lt;a href=&quot;https://github.com/CtripMobile/DynamicAPK&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DynamicAPK&lt;/a&gt;,这种框架是为了解决平台级的产品相关业务开发之间的解耦，热补丁只是其附属功能，对于量级没有那么大的项目，没有必要采用这种很重的框架。另外就是基于阿里出品的基于&lt;a href=&quot;https://github.com/rovo89/Xposed&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Xposed&lt;/a&gt;的AOP框架&lt;a href=&quot;https://github.com/alibaba/dexposed&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dexposed&lt;/a&gt;，剥离掉&lt;code&gt;Xposed&lt;/code&gt;的root部分功能，主要应该与AOP编程、插桩 (如测试、性能监控等)、在线热补丁、SDK hooking等，用起来比较重并且不支持&lt;code&gt;ART&lt;/code&gt;。&lt;br&gt;众多的热补丁框架为开发者带来了福利，不用发版本就可以紧急修复线上版本的bug。&lt;/p&gt;
&lt;p&gt;这篇文章主要是分析AndFix的实现原理。&lt;/p&gt;
&lt;h1 id=&quot;AndFix&quot;&gt;&lt;a href=&quot;#AndFix&quot; class=&quot;headerlink&quot; title=&quot;AndFix&quot;&gt;&lt;/a&gt;AndFix&lt;/h1&gt;&lt;h2 id=&quot;u4F7F_u7528_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u4F7F_u7528_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;使用方法&quot;&gt;&lt;/a&gt;使用方法&lt;/h2&gt;&lt;p&gt;引用&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.alipay.euler:andfix:0.3.1@aar&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;初始化&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;patchManager = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PatchManager(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;patchManager.init(appversion);&lt;span class=&quot;comment&quot;&gt;//current version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;加载补丁，尽量在&lt;code&gt;Application&lt;/code&gt;的&lt;code&gt;onCreate&lt;/code&gt;方法中使用&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;patchManager.loadPatch();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;应用补丁&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;patchManager.addPatch(path);&lt;span class=&quot;comment&quot;&gt;//path of the patch file that was downloaded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;项目中提供了一个生成补丁(后缀为&lt;code&gt;.apatch&lt;/code&gt;)的工具&lt;code&gt;apkpatch&lt;/code&gt;&lt;br&gt;用法：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;usage: apkpatch -f &amp;#60;new&amp;#62; -t &amp;#60;old&amp;#62; -o &amp;#60;output&amp;#62; -k &amp;#60;keystore&amp;#62; -p &amp;#60;***&amp;#62; -a &amp;#60;alias&amp;#62; -e &amp;#60;***&amp;#62;&amp;#10; -a,--alias &amp;#60;alias&amp;#62;     keystore entry alias.&amp;#10; -e,--epassword &amp;#60;***&amp;#62;   keystore entry password.&amp;#10; -f,--from &amp;#60;loc&amp;#62;        new Apk file path.&amp;#10; -k,--keystore &amp;#60;loc&amp;#62;    keystore path.&amp;#10; -n,--name &amp;#60;name&amp;#62;       patch name.&amp;#10; -o,--out &amp;#60;dir&amp;#62;         output dir.&amp;#10; -p,--kpassword &amp;#60;***&amp;#62;   keystore password.&amp;#10; -t,--to &amp;#60;loc&amp;#62;          old Apk file path.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 如下生成补丁文件&lt;/p&gt;
 &lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./apkpatch.sh -f new.apk -t old.apk -o ./ -k ../one.keystore -p *** -a one -e ***&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;apkPatch_u5DE5_u5177_u89E3_u6790&quot;&gt;&lt;a href=&quot;#apkPatch_u5DE5_u5177_u89E3_u6790&quot; class=&quot;headerlink&quot; title=&quot;apkPatch工具解析&quot;&gt;&lt;/a&gt;apkPatch工具解析&lt;/h2&gt;&lt;p&gt;&lt;code&gt;apkpatch&lt;/code&gt;是一个jar包，并没有开源出来，我们可以用&lt;code&gt;JD-GUI&lt;/code&gt;或者&lt;code&gt;procyon&lt;/code&gt;来看下它的源码,版本1.0.3。&lt;br&gt;首先找到&lt;code&gt;Main.class&lt;/code&gt;，位于&lt;code&gt;com.euler.patch&lt;/code&gt;包下，找到&lt;code&gt;Main()&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//根据上面命令输入拿到参数        &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ApkPatch apkPatch = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ApkPatch(from, to, name, out, keystore, password, alias, entry);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       apkPatch.doPatch();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;ApkPatch&lt;/code&gt;的&lt;code&gt;doPatch&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doPatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//生成smali文件夹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; File smaliDir = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.out, &lt;span class=&quot;string&quot;&gt;&quot;smali&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!smaliDir.exists()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                smaliDir.mkdir();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//新建diff.dex文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; File dexFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.out, &lt;span class=&quot;string&quot;&gt;&quot;diff.dex&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//新建diff.apatch文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; File outFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.out, &lt;span class=&quot;string&quot;&gt;&quot;diff.apatch&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//第一步，拿到两个apk文件对比，对比信息写入DiffInfo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; DiffInfo info = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DexDiffer().diff(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.from, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.to);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//第二步，将对比结果info写入.smali文件中，然后打包成dex文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.classes = buildCode(smaliDir, dexFile, info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//第三步，将生成的dex文件写入jar包，并根据输入的签名信息进行签名,生成diff.apatch文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.build(outFile, dexFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//第四步，将diff.apatch文件重命名，结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.release(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.out, dexFile, outFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e2.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上可以简单描述为两步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对比apk文件，得到需要的信息&lt;/li&gt;
&lt;li&gt;将结果打包为apatch文件&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u5BF9_u6BD4apk_u6587_u4EF6&quot;&gt;&lt;a href=&quot;#u5BF9_u6BD4apk_u6587_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;对比apk文件&quot;&gt;&lt;/a&gt;对比apk文件&lt;/h3&gt;&lt;p&gt;&lt;code&gt;DexDiffer().diff()&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; DiffInfo &lt;span class=&quot;title&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; File newFile, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; File oldFile)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//提取新apk的dex文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; DexBackedDexFile newDexFile = DexFileFactory.loadDexFile(newFile, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//提取旧apk的dex文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; DexBackedDexFile oldDexFile = DexFileFactory.loadDexFile(oldFile, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; DiffInfo info = DiffInfo.getInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; contains = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; DexBackedClassDef newClazz : newDexFile.getClasses()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Set&amp;lt;? extends DexBackedClassDef&amp;gt; oldclasses = oldDexFile.getClasses();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; DexBackedClassDef oldClazz : oldclasses) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	 &lt;span class=&quot;comment&quot;&gt;//对比相同的方法,存储为修改的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (newClazz.equals(oldClazz)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                	 &lt;span class=&quot;comment&quot;&gt;//对比class文件的变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.compareField(newClazz, oldClazz, info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//对比class文件的方法，如果同一个类中没有相同的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//则判定为新增方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.compareMethod(newClazz, oldClazz, info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    contains = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!contains) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	 &lt;span class=&quot;comment&quot;&gt;//否则是新增的类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                info.addAddedClasses(newClazz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//返回包含diff信息的DiffInfo对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其原理就是根据 &lt;code&gt;dex diff&lt;/code&gt;得到两个apk文件的差别信息。对比方法过程中对比两个&lt;code&gt;dex&lt;/code&gt;文件中同时存在的方法，如果方法实现不同则&lt;strong&gt;存储为修改过的方法&lt;/strong&gt;；如果方法名不同，&lt;strong&gt;存储为新增的方法&lt;/strong&gt;，也就是说&lt;strong&gt;AndFix支持增加新的方法&lt;/strong&gt;，这一点已经测试证明。另外，在比较&lt;code&gt;Field&lt;/code&gt;的时候有如下代码&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addAddedFields&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DexBackedField field)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  addedFields.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;string&quot;&gt;&quot;can,t add new Field:&quot;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field.getName() + &lt;span class=&quot;string&quot;&gt;&quot;(&quot;&lt;/span&gt; + field.getType() + &lt;span class=&quot;string&quot;&gt;&quot;), &quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;in class :&quot;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field.getDefiningClass());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addModifiedFields&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DexBackedField field)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  modifiedFields.add(field);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;string&quot;&gt;&quot;can,t modified Field:&quot;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field.getName() + &lt;span class=&quot;string&quot;&gt;&quot;(&quot;&lt;/span&gt; + field.getType() + &lt;span class=&quot;string&quot;&gt;&quot;), &quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;in class :&quot;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    field.getDefiningClass());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也就是说&lt;strong&gt;&lt;code&gt;AndFix&lt;/code&gt;不支持增加成员变量，但是支持在新增方法中增加的局部变量&lt;/strong&gt;。&lt;strong&gt;也不支持修改成员变量&lt;/strong&gt;。已经测试证明这一点。&lt;br&gt;还有一个地方要注意，就是提取&lt;code&gt;dex&lt;/code&gt;文件的地方，在&lt;code&gt;DexFileFactory&lt;/code&gt;类中&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; DexBackedDexFile &lt;span class=&quot;title&quot;&gt;loadDexFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(File dexFile, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; api, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; experimental)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; loadDexFile(dexFile, &lt;span class=&quot;string&quot;&gt;&quot;classes.dex&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Opcodes(api, experimental));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，只提取出了&lt;code&gt;classes.dex&lt;/code&gt;这个文件，所以源生工具并&lt;strong&gt;不支持multidex&lt;/strong&gt;，如果使用了&lt;code&gt;multidex&lt;/code&gt;方案，并且修复的类不在同一个&lt;code&gt;dex&lt;/code&gt;文件中，那么补丁就不会生效。所以这里并不像作者在issue中提到的支持&lt;code&gt;multidex&lt;/code&gt;那样，不过我们可以通过&lt;code&gt;JavaAssist&lt;/code&gt;工具&lt;strong&gt;修改&lt;code&gt;apkpatch&lt;/code&gt;这个jar包，来达到支持multidex的目的&lt;/strong&gt;，后续我们会讲到。&lt;/p&gt;
&lt;h3 id=&quot;u5C06_u5BF9_u6BD4_u7ED3_u679C_u6253_u5305&quot;&gt;&lt;a href=&quot;#u5C06_u5BF9_u6BD4_u7ED3_u679C_u6253_u5305&quot; class=&quot;headerlink&quot; title=&quot;将对比结果打包&quot;&gt;&lt;/a&gt;将对比结果打包&lt;/h3&gt;&lt;p&gt;这一步我们重点关注拿到&lt;code&gt;DiffInfo&lt;/code&gt;后将其存入&lt;code&gt;smali&lt;/code&gt;文件的过程&lt;br&gt;&lt;code&gt;ApkPatch.buildCode()&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Set&amp;lt;String&amp;gt; &lt;span class=&quot;title&quot;&gt;buildCode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; File smaliDir, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; File dexFile, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; DiffInfo info)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, RecognitionException, FileNotFoundException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ClassFileNameHandler outFileNameHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClassFileNameHandler(smaliDir, &lt;span class=&quot;string&quot;&gt;&quot;.smali&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ClassFileNameHandler inFileNameHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClassFileNameHandler(smaliDir, &lt;span class=&quot;string&quot;&gt;&quot;.smali&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; DexBuilder dexBuilder = DexBuilder.makeDexBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; DexBackedClassDef classDef : list) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String className = classDef.getType();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            baksmali.disassembleClass(classDef, outFileNameHandler, options);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; File smaliFile = inFileNameHandler.getUniqueFilenameForClass(TypeGenUtil.newType(className));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            classes.add(TypeGenUtil.newType(className).substring(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, TypeGenUtil.newType(className).length() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).replace(&lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SmaliMod.assembleSmaliFile(smaliFile, dexBuilder, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dexBuilder.writeTo(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileDataStore(dexFile));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; classes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将上一步得到的&lt;code&gt;diff&lt;/code&gt;信息写入&lt;code&gt;smali&lt;/code&gt;文件，并且生成&lt;code&gt;diff.dex&lt;/code&gt;文件。&lt;code&gt;smali&lt;/code&gt;文件的命名以&lt;code&gt;_CF.smali&lt;/code&gt;结尾，并且在修改的地方用自定义的&lt;strong&gt;Annotation&lt;/strong&gt;(&lt;code&gt;MethodReplace&lt;/code&gt;)标注，用于在替换之前查找修复的变量或方法，如下。&lt;/p&gt;
&lt;figure class=&quot;highlight smali&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.method&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt; private&lt;/span&gt;&lt;span class=&quot;function&quot;&gt; getUserProfile(&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;)&lt;/span&gt;V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;    .locals&lt;/span&gt; 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;    .annotation&lt;/span&gt; runtime &lt;span class=&quot;class&quot;&gt;Lcom/alipay/euler/andfix/annotation/MethodReplace;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        clazz = &lt;span class=&quot;string&quot;&gt;&quot;com.boohee.account.UserProfileActivity&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        method = &lt;span class=&quot;string&quot;&gt;&quot;getUserProfile&quot;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .end annotation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在打包生成的&lt;code&gt;diff.dex&lt;/code&gt;文件中，反编译出来可以看到这段代码&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//生成的注解&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@MethodReplace&lt;/span&gt;(clazz=&lt;span class=&quot;string&quot;&gt;&quot;com.boohee.account.UserProfileActivity&quot;&lt;/span&gt;, method=&lt;span class=&quot;string&quot;&gt;&quot;onCreate&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle paramBundle)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(paramBundle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getUserProfile();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addPatch();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后就是签名，打包，加密的流程，就不具体分析了。注意，&lt;code&gt;apkPatch&lt;/code&gt;在生成&lt;code&gt;.apatch&lt;/code&gt;补丁文件的时候会加入签名信息，并且会进行加密操作，在应用补丁的时候会验证签名信息是否正确。&lt;/p&gt;
&lt;h2 id=&quot;u6253_u8865_u4E01_u539F_u7406&quot;&gt;&lt;a href=&quot;#u6253_u8865_u4E01_u539F_u7406&quot; class=&quot;headerlink&quot; title=&quot;打补丁原理&quot;&gt;&lt;/a&gt;打补丁原理&lt;/h2&gt;&lt;h3 id=&quot;Java_u5C42&quot;&gt;&lt;a href=&quot;#Java_u5C42&quot; class=&quot;headerlink&quot; title=&quot;Java层&quot;&gt;&lt;/a&gt;Java层&lt;/h3&gt;&lt;p&gt;&lt;code&gt;PatchManager.init()&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String appVersion)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		SharedPreferences sp = mContext.getSharedPreferences(SP_NAME,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Context.MODE_PRIVATE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String ver = sp.getString(SP_VERSION, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//根据版本号加载补丁文件，版本号不同清空缓存目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ver == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || !ver.equalsIgnoreCase(appVersion)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			cleanPatch();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			sp.edit().putString(SP_VERSION, appVersion).commit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			initPatchs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initPatchs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// 缓存目录data/data/package/file/apatch/会缓存补丁文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// 即使原目录被删除也可以打补丁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		File[] files = mPatchDir.listFiles();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (File file : files) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			addPatch(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;addPatch&lt;/code&gt;和&lt;code&gt;loadPatch()&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addPatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FileUtil.copyFile(src, dest);&lt;span class=&quot;comment&quot;&gt;// copy to patch&#39;s directory&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Patch patch = addPatch(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (patch != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		loadPatch(patch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loadPatch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Patch patch)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Set&amp;lt;String&amp;gt; patchNames = patch.getPatchNames();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ClassLoader cl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	List&amp;lt;String&amp;gt; classes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String patchName : patchNames) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLoaders.containsKey(&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			cl = mContext.getClassLoader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			cl = mLoaders.get(patchName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cl != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			classes = patch.getClasses(patchName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mAndFixManager.fix(patch.getFile(), cl, classes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再看下&lt;code&gt;AndFixManager&lt;/code&gt;的&lt;code&gt;fix()&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//省略掉验证签名信息、安全检查的代码，安全方面做得很好&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fixClass&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Class&amp;lt;?&amp;gt; clazz, ClassLoader classLoader)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Method method : methods) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//还记得对比过程中生成的Annotation注解吗&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//这里通过注解找到需要替换掉的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			methodReplace = method.getAnnotation(MethodReplace.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (methodReplace == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//标记的类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			clz = methodReplace.clazz();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//需要替换的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			meth = methodReplace.method();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isEmpty(clz) &amp;amp;&amp;amp; !isEmpty(meth)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;//所有找到的方法，循环替换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				replaceMethod(classLoader, clz, meth, method);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;replaceMethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Method dest, Method src)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setFieldFlag&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Field field)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addReplaceMethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Method src, Method dest)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			replaceMethod(src, dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			initFields(dest.getDeclaringClass());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Throwable e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&quot;addReplaceMethod&quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后面就是调用&lt;code&gt;native&lt;/code&gt;层的方法，写在&lt;code&gt;jni&lt;/code&gt;中，打包为&lt;code&gt;.so&lt;/code&gt;文件供&lt;code&gt;java&lt;/code&gt;层调用。&lt;/p&gt;
&lt;p&gt;总结一下，&lt;code&gt;java&lt;/code&gt;层的功能就是找到补丁文件，根据补丁中的注解找到将要替换的方法然后交给jni层去处理替换方法的操作。好了，继续往下看。&lt;/p&gt;
&lt;h3 id=&quot;Native_u5C42&quot;&gt;&lt;a href=&quot;#Native_u5C42&quot; class=&quot;headerlink&quot; title=&quot;Native层&quot;&gt;&lt;/a&gt;Native层&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;jni&lt;/code&gt;的代码中支持&lt;code&gt;Dalvik&lt;/code&gt;与&lt;code&gt;ART&lt;/code&gt;，那么这是怎么区分的呢?在&lt;code&gt;AndFixManager&lt;/code&gt;的构造方法中有这么一句&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mSupport = Compat.isSupport();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isSupport&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isChecked)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isSupport;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		isChecked = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// not support alibaba&#39;s YunOs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//SDK android 2.3 to android 6.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isYunOS() &amp;amp;&amp;amp; AndFix.setup() &amp;amp;&amp;amp; isSupportSDKVersion()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			isSupport = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isSupport;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;AndFix&lt;/code&gt;的`setUp()``方法&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String vmVersion = System.getProperty(&lt;span class=&quot;string&quot;&gt;&quot;java.vm.version&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//判断是否是ART&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isArt = vmVersion != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; vmVersion.startsWith(&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; apilevel = Build.VERSION.SDK_INT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//这里也是native方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; setup(isArt, apilevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&quot;setup&quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后调用&lt;code&gt;setup(isArt, apilevel);&lt;/code&gt;的&lt;code&gt;native&lt;/code&gt;方法，在&lt;code&gt;andfix.cpp&lt;/code&gt;中注册&lt;code&gt;jni&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; JNINativeMethod gMethods[] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* name, signature, funcPtr */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;setup&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;(ZI)Z&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*) setup &amp;#125;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;replaceMethod&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V&quot;&lt;/span&gt;,(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*) replaceMethod &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;setFieldFlag&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;string&quot;&gt;&quot;(Ljava/lang/reflect/Field;)V&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*) setFieldFlag &amp;#125;, &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;native&lt;/code&gt;实现&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; jboolean &lt;span class=&quot;title&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv* env, jclass clazz, jboolean isart,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		jint apilevel)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	isArt = isart;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	LOGD(&lt;span class=&quot;string&quot;&gt;&quot;vm is: %s , apilevel is: %i&quot;&lt;/span&gt;, (isArt ? &lt;span class=&quot;string&quot;&gt;&quot;art&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;dalvik&quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; )apilevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isArt) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; art_setup(env, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) apilevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dalvik_setup(env, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) apilevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;replaceMethod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv* env, jclass clazz, jobject src,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		jobject dest)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isArt) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		art_replaceMethod(env, src, dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		dalvik_replaceMethod(env, src, dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据上层传过来的&lt;code&gt;isArt&lt;/code&gt;判断调用&lt;code&gt;Dalvik&lt;/code&gt;还是&lt;code&gt;Art&lt;/code&gt;的方法。&lt;br&gt;以&lt;code&gt;Dalvik&lt;/code&gt;为例,继续往下分析,代码在&lt;code&gt;dalvik_method_replace.cpp&lt;/code&gt;中&lt;br&gt;&lt;code&gt;dalvik_setup&lt;/code&gt;方法&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; jboolean __attribute__ ((visibility (&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt;))) dalvik_setup(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		JNIEnv* env, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; apilevel) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	jni_env = env;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;* dvm_hand = dlopen(&lt;span class=&quot;string&quot;&gt;&quot;libdvm.so&quot;&lt;/span&gt;, RTLD_NOW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dvm_hand) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//使用dlsym方法将dvmCallMethod_fnPtr函数指针指向libdvm.so中的		//dvmCallMethod方法，也就是说可以通过调用该函数指针执行其指向的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//下面会用到dvmCallMethod_fnPtr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		dvmCallMethod_fnPtr = dvm_dlsym(dvm_hand,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			apilevel &amp;gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;_Z13dvmCallMethodP6ThreadPK6MethodP6ObjectP6JValuez&quot;&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;string&quot;&gt;&quot;dvmCallMethod&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;替换方法的关键在于&lt;code&gt;native&lt;/code&gt;层怎么影响内存里的java代码，我们知道&lt;code&gt;java&lt;/code&gt;代码里将一个方法声明为&lt;code&gt;native&lt;/code&gt;方法时,对此函数的调用就会到&lt;code&gt;native&lt;/code&gt;世界里找，AndFix原理就是将一个不是native的方法修改成native方法，然后在&lt;code&gt;native&lt;/code&gt;层进行替换，通过&lt;code&gt;dvmCallMethod_fnPtr&lt;/code&gt;函数指针来调用&lt;code&gt;libdvm.so&lt;/code&gt;中的&lt;code&gt;dvmCallMethod()&lt;/code&gt;来加载替换后的新方法，达到替换方法的目的。&lt;code&gt;Jni&lt;/code&gt;反射调用&lt;code&gt;java&lt;/code&gt;方法时要用到一个&lt;code&gt;jmethodID&lt;/code&gt;指针,这个指针在&lt;code&gt;Dalvik&lt;/code&gt;里其实就是&lt;code&gt;Method&lt;/code&gt;类,通过修改这个类的一些属性就可以实现在运行时将一个方法修改成&lt;code&gt;native&lt;/code&gt;方法。&lt;/p&gt;
&lt;p&gt;看下&lt;code&gt;dalvik_replaceMethod(env, src, dest);&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; __attribute__ ((visibility (&lt;span class=&quot;string&quot;&gt;&quot;hidden&quot;&lt;/span&gt;))) dalvik_replaceMethod(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		JNIEnv* env, jobject src, jobject dest) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	jobject clazz = env-&amp;gt;CallObjectMethod(dest, jClassMethod);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ClassObject* clz = (ClassObject*) dvmDecodeIndirectRef_fnPtr(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			dvmThreadSelf_fnPtr(), clazz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//设置为初始化完毕&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clz-&amp;gt;status = CLASS_INITIALIZED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//meth是将要被替换的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Method* meth = (Method*) env-&amp;gt;FromReflectedMethod(src);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//target是新的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Method* target = (Method*) env-&amp;gt;FromReflectedMethod(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	LOGD(&lt;span class=&quot;string&quot;&gt;&quot;dalvikMethod: %s&quot;&lt;/span&gt;, meth-&amp;gt;name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	meth-&amp;gt;jniArgInfo = &lt;span class=&quot;number&quot;&gt;0x80000000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//修改method的属性，将meth设置为native方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	meth-&amp;gt;accessFlags |= ACC_NATIVE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argsSize = dvmComputeMethodArgsSize_fnPtr(meth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!dvmIsStaticMethod(meth))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		argsSize++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	meth-&amp;gt;registersSize = meth-&amp;gt;insSize = argsSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//将新的方法信息保存到insns&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	meth-&amp;gt;insns = (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*) target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//绑定桥接函数，java方法的跳转函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	meth-&amp;gt;nativeFunc = dalvik_dispatcher;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dalvik_dispatcher&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; u4* args, jvalue* pResult,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Method* method, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;* self)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Method* meth = (Method*) method-&amp;gt;insns;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	meth-&amp;gt;accessFlags = meth-&amp;gt;accessFlags | ACC_PUBLIC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!dvmIsStaticMethod(meth)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Object* thisObj = (Object*) args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ClassObject* tmp = thisObj-&amp;gt;clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		thisObj-&amp;gt;clazz = meth-&amp;gt;clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		argArray = boxMethodArgs(meth, args + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dvmCheckException_fnPtr(self))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;goto&lt;/span&gt; bail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		dvmCallMethod_fnPtr(self, (Method*) jInvokeMethod,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				dvmCreateReflectMethodObject_fnPtr(meth), &amp;amp;result, thisObj,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				argArray);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		thisObj-&amp;gt;clazz = tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		argArray = boxMethodArgs(meth, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dvmCheckException_fnPtr(self))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;goto&lt;/span&gt; bail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		dvmCallMethod_fnPtr(self, (Method*) jInvokeMethod,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				dvmCreateReflectMethodObject_fnPtr(meth), &amp;amp;result, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				argArray);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bail: dvmReleaseTrackedAlloc_fnPtr((Object*) argArray, self);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过&lt;code&gt;dalvik_dispatcher&lt;/code&gt;这个跳转函数完成最后的替换工作，到这里就完成了两个方法的替换，有问题的方法就可以被修复后的方法取代。ART的替换方法就不讲了，原理上差别不大。&lt;/p&gt;
&lt;h2 id=&quot;u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;AndFix热补丁原理就是在&lt;code&gt;native&lt;/code&gt;动态替换方法&lt;code&gt;java&lt;/code&gt;层的代码，通过&lt;code&gt;native&lt;/code&gt;层hook &lt;code&gt;java&lt;/code&gt;层的代码。&lt;/p&gt;
&lt;h3 id=&quot;u4F18_u70B9&quot;&gt;&lt;a href=&quot;#u4F18_u70B9&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;因为是动态的，所以不需要重启应用就可以生效&lt;/li&gt;
&lt;li&gt;支持ART与Dalvik&lt;/li&gt;
&lt;li&gt;与multidex方案相比，性能会有所提升(Multi Dex需要修改所有class的class_ispreverified标志位，导致运行时性能有所损失)&lt;/li&gt;
&lt;li&gt;支持新增加方法&lt;/li&gt;
&lt;li&gt;支持在新增方法中新增局部变量&lt;/li&gt;
&lt;li&gt;足够轻量，生成补丁文件简单&lt;/li&gt;
&lt;li&gt;安全性够高，验证签名&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;u7F3A_u70B9&quot;&gt;&lt;a href=&quot;#u7F3A_u70B9&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;因为是动态的，跳过了类的初始化，设置为初始化完毕，所以对于静态方法、静态成员变量、构造方法或者class.forname()的处理可能会有问题&lt;/li&gt;
&lt;li&gt;不支持新增成员变量和修改成员变量&lt;/li&gt;
&lt;li&gt;官方apkPatch工具不支持multidex,但是可以通过修改工具来达到支持multidex的目的&lt;/li&gt;
&lt;li&gt;由于是在native层替换方法，某些缺心眼厂商可能会修改源生关键部分的native层实现，导致可能在某些特定ROM支持不够好&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u53C2_u8003&quot;&gt;&lt;a href=&quot;#u53C2_u8003&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bbs.pediy.com/showthread.php?t=186054&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;注入安卓进程,并hook java世界的方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/l173864930/article/details/39667355&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hook Java的的一个改进版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/xxooyc/article/details/50317455&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于Android APP在线热修复bug方案的调研(一)(AndFix)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.zhaiyifan.cn/2015/11/20/HotPatchCompare/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;各大热补丁方案分析和比较&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/alibaba/AndFix&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndFix&lt;/a&gt;，本文分析版本：&lt;a href=&quot;https://github.com/alibaba/AndFix/tree/c68d9811bd756ee418fce761ca113376ec9c4e66&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AndFix:0.3.1&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;2015年下半年开源了很多Android热更新的项目，其中大部分是以QQ空间技术团队写的那篇&lt;a hre
    
    </summary>
    
    
      <category term="AndFix" scheme="http://w4lle.github.io/tags/AndFix/"/>
    
      <category term="源码分析" scheme="http://w4lle.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
      <category term="热补丁" scheme="http://w4lle.github.io/tags/%E7%83%AD%E8%A1%A5%E4%B8%81/"/>
    
  </entry>
  
  <entry>
    <title>ClassyShark——apk分析利器</title>
    <link href="http://w4lle.github.io/2016/02/15/ClassyShark%E2%80%94%E2%80%94%E5%88%86%E6%9E%90apk%E5%88%A9%E5%99%A8/"/>
    <id>http://w4lle.github.io/2016/02/15/ClassyShark——分析apk利器/</id>
    <published>2016-02-15T06:32:15.000Z</published>
    <updated>2016-04-09T06:41:13.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/ClassyShark.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u80CC_u666F&quot;&gt;&lt;a href=&quot;#u80CC_u666F&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;对于一个感兴趣的android非开源项目，通常使用逆向工程查看apk中的内容，俗称反编译。工具大概包括&lt;a href=&quot;https://github.com/pxb1988/dex2jar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dex2jar&lt;/a&gt;、&lt;a href=&quot;http://jd.benow.ca/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JD-GUI&lt;/a&gt;、&lt;a href=&quot;http://ibotpeaches.github.io/Apktool/install/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;apktool&lt;/a&gt;、&lt;a href=&quot;https://bitbucket.org/mstrobel/procyon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;procyon&lt;/a&gt;,这些工具使用起来相对比较麻烦，如果我们只想知道该项目的基本框架、使用到哪些开源项目的话，那么就有些浪费时间。&lt;br&gt;对于一些大厂的项目，我们还比较关心的是用到了哪些新的框架和技术，对于新技术的流行程度和使用普遍程度有个比较好的把握，指导是否需要进行深度的使用学习。比如最近的比较流行的rxjava，热更新技术等等。&lt;/p&gt;
&lt;h2 id=&quot;ClassyShark&quot;&gt;&lt;a href=&quot;#ClassyShark&quot; class=&quot;headerlink&quot; title=&quot;ClassyShark&quot;&gt;&lt;/a&gt;ClassyShark&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/google/android-classyshark&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ClassyShark&lt;/a&gt;是一款可以查看Android可执行文件的浏览工具，支持.dex, .aar, .so, .apk, .jar, .class, .xml 等文件格式，分析里面的内容包括classes.dex文件，包、方法数量、类、字符串、使用的NativeLibrary等。&lt;/p&gt;
&lt;h3 id=&quot;u4F7F_u7528_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u4F7F_u7528_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;使用方法&quot;&gt;&lt;/a&gt;使用方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;打开apk文件&lt;code&gt;java -jar ClassyShark.jar -open &amp;lt;YOUR_APK.apk&amp;gt;&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;将生成的所有数据导出到文本文件里&lt;code&gt;java -jar ClassyShark.jar -dump &amp;lt;BINARY_FILE&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将指定类生成的文件导出到文本文件里&lt;code&gt;java -jar ClassyShark.jar -dump &amp;lt;BINARY_FILE&amp;gt; &amp;lt;FULLY_QUALIFIED_CLASS_NAME&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打开ClassyShark，在GUI界面展示某特定的类&lt;/li&gt;
&lt;li&gt;&lt;code&gt;java -jar ClassyShark.jar -open &amp;lt;BINARY_FILE&amp;gt; &amp;lt;FULLY_QUALIFIED_CLASS_NAME&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;检测APK&lt;code&gt;java -jar ClassyShark.jar -inspect &amp;lt;YOUR_APK.apk&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;导出所有的字符串 &lt;code&gt;java -jar ClassyShark.jar -stringdump &amp;lt;YOUR_APK.apk&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u5177_u4F53_u4F7F_u7528&quot;&gt;&lt;a href=&quot;#u5177_u4F53_u4F7F_u7528&quot; class=&quot;headerlink&quot; title=&quot;具体使用&quot;&gt;&lt;/a&gt;具体使用&lt;/h3&gt;&lt;p&gt;以美团项目为例，让我们看看能得到什么有用的信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;java -jar ClassyShark.jar -open ~/Downloads/group-351_3-meituan_.apk&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/Classy_group.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;美团项目中使用了MultiDex,并且classes.dex文件有3个，说明方法数肯定非常多。&lt;br&gt;美团的编译版本非常新, 紧跟时代, 23版本(Android 6.0)。&lt;br&gt;并且TargetSdkVersion也是23版本，紧跟技术方向。&lt;br&gt;最低版本是16(Android 4.1), 4.1以下的手机无法运行。&lt;br&gt;而且有好多的so库，有美团自己的，也有好多是第三方的库。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/Classy_group_2.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到9万多个方法，怪不得会有3个classes.dex文件。&lt;br&gt;项目中应用了大量的第三方库，并且一般都是主流的比较稳定的开源库。&lt;br&gt;我们来看下都用到了哪些库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zxing/zxing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ZXing&lt;/a&gt;二维码识别库;&lt;br&gt;amap: 高德地图;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chrisbanes/Android-PullToRefresh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PullToRefresh&lt;/a&gt;使用最广的下拉刷新组件；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FasterXML/jackson-dataformat-smile&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jackson&lt;/a&gt;, json解析库;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JakeWharton/NineOldAndroids&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NineOldAndroids&lt;/a&gt; Jake大神的android兼容库&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/fresco&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fresco&lt;/a&gt;,facebook出品的图片处理库，图片加载节省很多内存，避免OOM。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RxJava&lt;/a&gt;java响应式编程库，再加上&lt;code&gt;Square&lt;/code&gt;的&lt;code&gt;Retrofit&lt;/code&gt;库的支持，可以说未来就是&lt;code&gt;rxjava&lt;/code&gt;的天下，目前市面上已经有很多基于rxjava的项目；我们团队也将基于rxjava来开发项目；&lt;br&gt;圈内最牛逼的开源公司&lt;a href=&quot;https://github.com/square&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Square&lt;/a&gt;，Jake大神所在的公司，可以毫不夸张的说，&lt;a href=&quot;https://github.com/square&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Square&lt;/a&gt;的开源项目使得Android开发提速了好几年&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/square/okhttp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;okhttp&lt;/a&gt;网络请求库，已被官方采用;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/square/retrofit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;retrofit&lt;/a&gt;非常牛逼的网络请求库，配合&lt;code&gt;rxjava&lt;/code&gt;和lambda使用，代码量减少90%;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/square/otto&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;otto&lt;/a&gt;事件总线;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/square/picasso&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;picasso&lt;/a&gt;图片加载库；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/square/dagger&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dagger&lt;/a&gt;依赖注入框架；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Manabu-GT/ExpandableTextView&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ExpandableTextView&lt;/a&gt;可折叠的TextView&lt;/li&gt;
&lt;li&gt;iflytek, 科大讯飞的语音集成;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JakeWharton/ViewPagerIndicator&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ViewPagerIndicator&lt;/a&gt;还是Jake大神的项目，viewpager的滚动控件；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://actionbarsherlock.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;actionbarsherlock&lt;/a&gt;依然是Jake大神的项目，Actionbar的适配库，不过已经过时了；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.huawei.com/push&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;华为推送&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jgilfelt/SystemBarTint&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SystemBarTint&lt;/a&gt;状态栏沉浸效果库&lt;/li&gt;
&lt;li&gt;百度地图&lt;/li&gt;
&lt;li&gt;新浪微博&lt;/li&gt;
&lt;li&gt;腾讯的QQ和微信&lt;/li&gt;
&lt;li&gt;大众点评,已经合并一家,东西也得用;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.umpay.com/umpay_cms/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;umpay&lt;/a&gt;, 联动优势支付;&lt;/li&gt;
&lt;li&gt;支付宝；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alibaba/AndFix&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andfix&lt;/a&gt;阿里出品的android热更新框架；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.flurry.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flurry&lt;/a&gt;统计库；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.xiaomi.com/doc/?page_id=1670&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小米推送&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kevinsawicki/http-request&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http-request&lt;/a&gt;网络请求库；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/greenrobot/EventBus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EventBus&lt;/a&gt;事件总线库；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chrisbanes/PhotoView&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PhotoView&lt;/a&gt;放大缩小的图片处理库；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/roboguice/roboguice&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;roboguice&lt;/a&gt;依赖注入框架，类似&lt;code&gt;Dagger&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.lingala.net/zip4j/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;zip4j&lt;/a&gt;处理zip压缩的库;&lt;br&gt;&lt;a href=&quot;https://github.com/BoltsFramework/Bolts-Android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;link&lt;/a&gt;异步task关联库,很像&lt;code&gt;rxjava&lt;/code&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;u603B_u7ED3&quot;&gt;&lt;a href=&quot;#u603B_u7ED3&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;从上面分析我们可见看出，美团是一个技术很开放的公司，对于框架的使用比较多，使用的基本都是主流的开发框架，减少开发成本，增强app的稳定性和体验，对于我们来说，有很大的借鉴意义。比如，目前都在试水的热更新框架，美团选择了阿里的&lt;code&gt;andfix&lt;/code&gt;,那么该技术方案肯定是得到了美团团队的验证；另外，美团团队也是比较潮流的，&lt;code&gt;Retrofit&lt;/code&gt;+&lt;code&gt;Rxjava&lt;/code&gt;的潮流趋势已经不可阻挡，美团已经开始使用；但是，从项目引用库中我们也可以看到一些不足之处；比如，同一种框架引用了多种第三方库，如网络库(&lt;code&gt;okhttp&lt;/code&gt;,&lt;code&gt;http-request&lt;/code&gt;),图片加载库(&lt;code&gt;fresco&lt;/code&gt;,&lt;code&gt;picasso&lt;/code&gt;),事件总线(&lt;code&gt;EventBus&lt;/code&gt;, &lt;code&gt;Otto&lt;/code&gt;),依赖注入(&lt;code&gt;Dagger&lt;/code&gt;,&lt;code&gt;roboguice&lt;/code&gt;)，推送相关的库等很多重复的库，如果去掉重复的库那么可以节省很多的编译时间和apk包的大小；还有就是，我们基本可以断定，美团团队的内部并不能很好的统一，没有有效的沟通，代码开发很混乱，导致项目结构上的臃肿，重复库的使用等等问题。&lt;/p&gt;
&lt;p&gt;通过分析App的项目结构和引用库的信息，我们大致掌握了该项目的架构，一些开发中的经验和不足，拓宽下开发视野，发现一些好用的开源库，增强我们的武器，这些都是我们在开发中可以借鉴的东西。&lt;/p&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/8e8b88ea2197&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;分析应用使用的技术框架和开源库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/ClassyShark.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;u80CC_u66
    
    </summary>
    
    
      <category term="apk反编辑" scheme="http://w4lle.github.io/tags/apk%E5%8F%8D%E7%BC%96%E8%BE%91/"/>
    
      <category term="工具" scheme="http://w4lle.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="逆向" scheme="http://w4lle.github.io/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>终极Shell--Zsh 使用技巧</title>
    <link href="http://w4lle.github.io/2016/02/01/%E7%BB%88%E6%9E%81Shell-Zsh-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://w4lle.github.io/2016/02/01/终极Shell-Zsh-使用技巧/</id>
    <published>2016-01-31T17:51:36.000Z</published>
    <updated>2016-02-02T08:46:24.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;u4E3A_u4EC0_u4E48_u8981_u7528Zsh&quot;&gt;&lt;a href=&quot;#u4E3A_u4EC0_u4E48_u8981_u7528Zsh&quot; class=&quot;headerlink&quot; title=&quot;为什么要用Zsh&quot;&gt;&lt;/a&gt;为什么要用Zsh&lt;/h2&gt;&lt;p&gt;请参考这篇文章&lt;a href=&quot;http://macshuo.com/?p=676&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;终极 Shell&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Zsh_u4F7F_u7528_u6280_u5DE7&quot;&gt;&lt;a href=&quot;#Zsh_u4F7F_u7528_u6280_u5DE7&quot; class=&quot;headerlink&quot; title=&quot;Zsh使用技巧&quot;&gt;&lt;/a&gt;Zsh使用技巧&lt;/h2&gt;&lt;h3 id=&quot;u5DE7_u7528tab&quot;&gt;&lt;a href=&quot;#u5DE7_u7528tab&quot; class=&quot;headerlink&quot; title=&quot;巧用tab&quot;&gt;&lt;/a&gt;巧用&lt;code&gt;tab&lt;/code&gt;&lt;/h3&gt;&lt;h4 id=&quot;u81EA_u52A8_u5B8C_u6210&quot;&gt;&lt;a href=&quot;#u81EA_u52A8_u5B8C_u6210&quot; class=&quot;headerlink&quot; title=&quot;自动完成&quot;&gt;&lt;/a&gt;自动完成&lt;/h4&gt;&lt;p&gt;&lt;code&gt;tab&lt;/code&gt;用到最多的就是自动完成,比如&lt;code&gt;cd&lt;/code&gt;进入某个目录，可以输入该目录的中的几个字母，然后&lt;code&gt;tab&lt;/code&gt;自动补全。&lt;br&gt;你不必输入整个目录名称，只需输入初始几个可以唯一区别与其他目录的字母，Zsh会自动匹配出剩余部分。&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/QQ20160131-1%402x.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/tab.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;u73AF_u5883_u53D8_u91CF_u5C55_u5F00&quot;&gt;&lt;a href=&quot;#u73AF_u5883_u53D8_u91CF_u5C55_u5F00&quot; class=&quot;headerlink&quot; title=&quot;环境变量展开&quot;&gt;&lt;/a&gt;环境变量展开&lt;/h4&gt;&lt;p&gt;在Zsh中，你可以按下&lt;tab&gt;键来展开shell中的环境变量值&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/PWD-tab.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/PWD-tab-done.png&quot; alt=&quot;&quot;&gt;&lt;/tab&gt;&lt;/p&gt;
&lt;h4 id=&quot;kill_u547D_u4EE4_u8865_u5168&quot;&gt;&lt;a href=&quot;#kill_u547D_u4EE4_u8865_u5168&quot; class=&quot;headerlink&quot; title=&quot;kill命令补全&quot;&gt;&lt;/a&gt;kill命令补全&lt;/h4&gt;&lt;p&gt;通常我们想要杀死某个进程，一般都要先&lt;code&gt;ps&lt;/code&gt;下查看进程，然后&lt;code&gt;kill&lt;/code&gt;杀掉。使用&lt;code&gt;zsh&lt;/code&gt;可以这样&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/kill_tab.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;help_u547D_u4EE4&quot;&gt;&lt;a href=&quot;#help_u547D_u4EE4&quot; class=&quot;headerlink&quot; title=&quot;help命令&quot;&gt;&lt;/a&gt;help命令&lt;/h4&gt;&lt;p&gt;对于我们不熟悉的命令行，一般都会&lt;code&gt;--help&lt;/code&gt;查看帮助文档，而zsh可以直接敲你想要的命令，比如这样&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/git-tab.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5F3A_u5927_u7684_u5386_u53F2_u8BB0_u5F55&quot;&gt;&lt;a href=&quot;#u5F3A_u5927_u7684_u5386_u53F2_u8BB0_u5F55&quot; class=&quot;headerlink&quot; title=&quot;强大的历史记录&quot;&gt;&lt;/a&gt;强大的历史记录&lt;/h3&gt;&lt;p&gt;类UNIX系统通常都习惯于&lt;code&gt;ctrl+r&lt;/code&gt;的方式查找命令行的历史记录，挺好用的。但是&lt;code&gt;zsh&lt;/code&gt;有更强大的历史搜索，比如&lt;code&gt;UP&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/UP1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/UP2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;意思是上方向键能帮你找到最近使用的以&lt;code&gt;./gradlew&lt;/code&gt;开头的命令，&lt;code&gt;UP&lt;/code&gt; &lt;code&gt;DOWN&lt;/code&gt;可以循环查找&lt;/p&gt;
&lt;h3 id=&quot;u5F3A_u5927_u7684alias_u522B_u540D&quot;&gt;&lt;a href=&quot;#u5F3A_u5927_u7684alias_u522B_u540D&quot; class=&quot;headerlink&quot; title=&quot;强大的alias别名&quot;&gt;&lt;/a&gt;强大的&lt;code&gt;alias&lt;/code&gt;别名&lt;/h3&gt;&lt;p&gt;平时工作基本都用&lt;code&gt;git&lt;/code&gt;管理项目代码，每个人都有习惯使用的&lt;code&gt;git&lt;/code&gt;别名，&lt;code&gt;zsh&lt;/code&gt;为我们提供了一套通用的&lt;code&gt;alias&lt;/code&gt;,即使换了工作环境，只要有&lt;code&gt;zsh&lt;/code&gt;那么一套&lt;code&gt;alias&lt;/code&gt;全部搞定。在该文件下可以看到&lt;code&gt;~/.oh-my-zsh/plugins/git/git.plugin.zsh&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/alias_git.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;除了&lt;code&gt;git&lt;/code&gt;别名，还有好多有用的别名，&lt;code&gt;alias&lt;/code&gt;命令可以列出全部的别名&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w4lle/w4lle.github.io/post/source/uploads/alias.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u667A_u80FD_u8DF3_u8F6C&quot;&gt;&lt;a href=&quot;#u667A_u80FD_u8DF3_u8F6C&quot; class=&quot;headerlink&quot; title=&quot;智能跳转&quot;&gt;&lt;/a&gt;智能跳转&lt;/h3&gt;&lt;p&gt;首先需要安装插件&lt;code&gt;aotojump&lt;/code&gt;，zsh会自动记录你访问过的目录，通过 &lt;code&gt;j + 目录名&lt;/code&gt;可以直接进行目录跳转，而且目录名支持模糊匹配和自动补全，例如你访问过&lt;code&gt;Develop&lt;/code&gt;目录，输入&lt;code&gt;j develo&lt;/code&gt; 即可正确跳转。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;u4E3A_u4EC0_u4E48_u8981_u7528Zsh&quot;&gt;&lt;a href=&quot;#u4E3A_u4EC0_u4E48_u8981_u7528Zsh&quot; class=&quot;headerlink&quot; title=&quot;为什么要用Zsh&quot;&gt;&lt;/a&gt;为什么要用Zsh&lt;/h2&gt;&lt;
    
    </summary>
    
    
      <category term="Zsh" scheme="http://w4lle.github.io/tags/Zsh/"/>
    
      <category term="工具" scheme="http://w4lle.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://w4lle.github.io/2016/01/28/hello-world/"/>
    <id>http://w4lle.github.io/2016/01/28/hello-world/</id>
    <published>2016-01-28T06:38:14.000Z</published>
    <updated>2016-01-28T06:38:14.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick_Start&quot;&gt;&lt;a href=&quot;#Quick_Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create_a_new_post&quot;&gt;&lt;a href=&quot;#Create_a_new_post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run_server&quot;&gt;&lt;a href=&quot;#Run_server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate_static_files&quot;&gt;&lt;a href=&quot;#Generate_static_files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy_to_remote_sites&quot;&gt;&lt;a href=&quot;#Deploy_to_remote_sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io
    
    </summary>
    
    
  </entry>
  
</feed>
